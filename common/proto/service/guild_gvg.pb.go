// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/service/guild_gvg.proto

package service

import (
	coin_server_common_buffer "coin-server/common/buffer"
	coin_server_common_jwriter "coin-server/common/jwriter"
	coin_server_common_msgcreate "coin-server/common/msgcreate"
	coin_server_common_proto_jsonany "coin-server/common/proto/jsonany"
	models "coin-server/common/proto/models"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	sync "sync"
	unsafe "unsafe"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GuildGVG struct {
}

func (m *GuildGVG) Reset()      { *m = GuildGVG{} }
func (*GuildGVG) ProtoMessage() {}
func (*GuildGVG) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb5d09cf6a3febd9, []int{0}
}
func (m *GuildGVG) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildGVG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildGVG.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildGVG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildGVG.Merge(m, src)
}
func (m *GuildGVG) XXX_Size() int {
	return m.Size()
}
func (m *GuildGVG) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildGVG.DiscardUnknown(m)
}

var xxx_messageInfo_GuildGVG proto.InternalMessageInfo

func (*GuildGVG) XXX_MessageName() string {
	return "service.GuildGVG"
}

type GuildGVG_GetGVGFightInfoRequest struct {
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (m *GuildGVG_GetGVGFightInfoRequest) Reset()      { *m = GuildGVG_GetGVGFightInfoRequest{} }
func (*GuildGVG_GetGVGFightInfoRequest) ProtoMessage() {}
func (*GuildGVG_GetGVGFightInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb5d09cf6a3febd9, []int{0, 0}
}
func (m *GuildGVG_GetGVGFightInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildGVG_GetGVGFightInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildGVG_GetGVGFightInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildGVG_GetGVGFightInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildGVG_GetGVGFightInfoRequest.Merge(m, src)
}
func (m *GuildGVG_GetGVGFightInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *GuildGVG_GetGVGFightInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildGVG_GetGVGFightInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GuildGVG_GetGVGFightInfoRequest proto.InternalMessageInfo

func (m *GuildGVG_GetGVGFightInfoRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (*GuildGVG_GetGVGFightInfoRequest) XXX_MessageName() string {
	return "service.GuildGVG.GetGVGFightInfoRequest"
}

type GuildGVG_GetGVGFightInfoResponse struct {
	Sbp *models.SingleBattleParam `protobuf:"bytes,1,opt,name=sbp,proto3" json:"sbp,omitempty"`
}

func (m *GuildGVG_GetGVGFightInfoResponse) Reset()      { *m = GuildGVG_GetGVGFightInfoResponse{} }
func (*GuildGVG_GetGVGFightInfoResponse) ProtoMessage() {}
func (*GuildGVG_GetGVGFightInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eb5d09cf6a3febd9, []int{0, 1}
}
func (m *GuildGVG_GetGVGFightInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuildGVG_GetGVGFightInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuildGVG_GetGVGFightInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuildGVG_GetGVGFightInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildGVG_GetGVGFightInfoResponse.Merge(m, src)
}
func (m *GuildGVG_GetGVGFightInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *GuildGVG_GetGVGFightInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildGVG_GetGVGFightInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GuildGVG_GetGVGFightInfoResponse proto.InternalMessageInfo

func (m *GuildGVG_GetGVGFightInfoResponse) GetSbp() *models.SingleBattleParam {
	if m != nil {
		return m.Sbp
	}
	return nil
}

func (*GuildGVG_GetGVGFightInfoResponse) XXX_MessageName() string {
	return "service.GuildGVG.GetGVGFightInfoResponse"
}
func init() {
	proto.RegisterType((*GuildGVG)(nil), "service.GuildGVG")
	proto.RegisterType((*GuildGVG_GetGVGFightInfoRequest)(nil), "service.GuildGVG.GetGVGFightInfoRequest")
	proto.RegisterType((*GuildGVG_GetGVGFightInfoResponse)(nil), "service.GuildGVG.GetGVGFightInfoResponse")
}

func init() { proto.RegisterFile("proto/service/guild_gvg.proto", fileDescriptor_eb5d09cf6a3febd9) }

var fileDescriptor_eb5d09cf6a3febd9 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2d, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x4f, 0x2f, 0xcd, 0xcc, 0x49, 0x89,
	0x4f, 0x2f, 0x4b, 0xd7, 0x03, 0x8b, 0x0b, 0xb1, 0x43, 0x25, 0xa4, 0xc4, 0x21, 0xea, 0x72, 0xf3,
	0x53, 0x52, 0x73, 0x8a, 0xf5, 0x93, 0x12, 0x8b, 0x53, 0x21, 0x2a, 0xa4, 0x24, 0xd1, 0x24, 0x4a,
	0x4a, 0x72, 0xa0, 0x52, 0x4a, 0xad, 0x8c, 0x5c, 0x1c, 0xee, 0x20, 0x03, 0xdd, 0xc3, 0xdc, 0xa5,
	0x0c, 0xb9, 0xc4, 0xdc, 0x53, 0x4b, 0xdc, 0xc3, 0xdc, 0xdd, 0x32, 0xd3, 0x33, 0x4a, 0x3c, 0xf3,
	0xd2, 0xf2, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xc4, 0xb9, 0xd8, 0x8b, 0xf2, 0x73,
	0x52, 0xe3, 0x33, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xd8, 0x40, 0x5c, 0xcf, 0x14,
	0x29, 0x37, 0x2e, 0x71, 0x0c, 0x2d, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0xda, 0x5c, 0xcc,
	0xc5, 0x49, 0x05, 0x60, 0xf5, 0xdc, 0x46, 0x92, 0x7a, 0x10, 0xdb, 0xf5, 0x82, 0x33, 0xf3, 0xd2,
	0x73, 0x52, 0x9d, 0xc0, 0x6e, 0x08, 0x48, 0x2c, 0x4a, 0xcc, 0x0d, 0x02, 0xa9, 0x72, 0xf2, 0xbb,
	0xf1, 0x50, 0x8e, 0x61, 0xc5, 0x23, 0x39, 0xc6, 0x13, 0x8f, 0xe4, 0x18, 0x2f, 0x3c, 0x92, 0x63,
	0x7c, 0xf0, 0x48, 0x8e, 0xf1, 0xc5, 0x23, 0x39, 0x86, 0x0f, 0x8f, 0xe4, 0x18, 0x27, 0x3c, 0x96,
	0x63, 0x38, 0xf1, 0x58, 0x8e, 0xf1, 0xc2, 0x63, 0x39, 0x86, 0x1b, 0x8f, 0xe5, 0x18, 0xa2, 0x14,
	0x92, 0xf3, 0x33, 0xf3, 0x74, 0x41, 0xfe, 0x4e, 0x2d, 0xd2, 0x4f, 0xce, 0xcf, 0xcd, 0xcd, 0xcf,
	0xd3, 0x47, 0x09, 0xa4, 0x24, 0x36, 0x30, 0xd7, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x28, 0xcd,
	0x0a, 0x1e, 0x3c, 0x01, 0x00, 0x00,
}

func init() {
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildGVG.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildGVG_GetGVGFightInfoRequest.Get().(proto.Message)
	})
	coin_server_common_msgcreate.RegisterNewMessage(func() proto.Message {
		return poolGuildGVG_GetGVGFightInfoResponse.Get().(proto.Message)
	})
}

var poolGuildGVG = &sync.Pool{New: func() interface{} { return &GuildGVG{} }}

func (m *GuildGVG) ReleasePool() { m.Reset(); poolGuildGVG.Put(m); m = nil }

var poolGuildGVG_GetGVGFightInfoRequest = &sync.Pool{New: func() interface{} { return &GuildGVG_GetGVGFightInfoRequest{} }}

func (m *GuildGVG_GetGVGFightInfoRequest) ReleasePool() {
	m.Reset()
	poolGuildGVG_GetGVGFightInfoRequest.Put(m)
	m = nil
}

var poolGuildGVG_GetGVGFightInfoResponse = &sync.Pool{New: func() interface{} { return &GuildGVG_GetGVGFightInfoResponse{} }}

func (m *GuildGVG_GetGVGFightInfoResponse) ReleasePool() {
	m.Reset()
	poolGuildGVG_GetGVGFightInfoResponse.Put(m)
	m = nil
}
func (this *GuildGVG) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildGVG)
	if !ok {
		that2, ok := that.(GuildGVG)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *GuildGVG_GetGVGFightInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildGVG_GetGVGFightInfoRequest)
	if !ok {
		that2, ok := that.(GuildGVG_GetGVGFightInfoRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.RoleId != that1.RoleId {
		return false
	}
	return true
}
func (this *GuildGVG_GetGVGFightInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GuildGVG_GetGVGFightInfoResponse)
	if !ok {
		that2, ok := that.(GuildGVG_GetGVGFightInfoResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Sbp.Equal(that1.Sbp) {
		return false
	}
	return true
}
func (m *GuildGVG) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildGVG) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildGVG) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GuildGVG_GetGVGFightInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildGVG_GetGVGFightInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildGVG_GetGVGFightInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintGuildGvg(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GuildGVG_GetGVGFightInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuildGVG_GetGVGFightInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuildGVG_GetGVGFightInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Sbp != nil {
		{
			size, err := m.Sbp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGuildGvg(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintGuildGvg(dAtA []byte, offset int, v uint64) int {
	offset -= sovGuildGvg(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

var _ = coin_server_common_proto_jsonany.Any{}

func (m *GuildGVG) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	w.RawByte('}')

}

func (m *GuildGVG_GetGVGFightInfoRequest) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	if m.RoleId != "" {
		w.RawByte('"')
		w.RawString("role_id")
		w.RawByte('"')
		w.RawByte(':')
		w.String(m.RoleId)
		needWriteComma = true
	}
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GuildGVG_GetGVGFightInfoResponse) JsonBytes(w *coin_server_common_jwriter.Writer) {
	if m == nil {
		w.RawString("null")
		return
	}

	w.RawByte('{')
	needWriteComma := false
	w.RawByte('"')
	w.RawString("sbp")
	w.RawByte('"')
	w.RawByte(':')
	m.Sbp.JsonBytes(w)
	needWriteComma = true
	_ = needWriteComma
	w.RawByte('}')

}

func (m *GuildGVG) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildGVG) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildGVG) GoString() string {
	return m.String()
}

func (m *GuildGVG_GetGVGFightInfoRequest) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildGVG_GetGVGFightInfoRequest) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildGVG_GetGVGFightInfoRequest) GoString() string {
	return m.String()
}

func (m *GuildGVG_GetGVGFightInfoResponse) MarshalJSON() ([]byte, error) {
	w := coin_server_common_jwriter.Writer{Buffer: coin_server_common_buffer.Buffer{Buf: make([]byte, 0, 2048)}}
	m.JsonBytes(&w)
	return w.BuildBytes()
}
func (m *GuildGVG_GetGVGFightInfoResponse) String() string {
	d, _ := m.MarshalJSON()
	return *(*string)(unsafe.Pointer(&d))
}
func (m *GuildGVG_GetGVGFightInfoResponse) GoString() string {
	return m.String()
}

func (m *GuildGVG) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GuildGVG_GetGVGFightInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovGuildGvg(uint64(l))
	}
	return n
}

func (m *GuildGVG_GetGVGFightInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Sbp != nil {
		l = m.Sbp.Size()
		n += 1 + l + sovGuildGvg(uint64(l))
	}
	return n
}

func sovGuildGvg(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGuildGvg(x uint64) (n int) {
	return sovGuildGvg(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GuildGVG) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildGvg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuildGVG: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuildGVG: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGuildGvg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildGvg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildGVG_GetGVGFightInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildGvg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetGVGFightInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetGVGFightInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildGvg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGuildGvg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGuildGvg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuildGvg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildGvg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuildGVG_GetGVGFightInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGuildGvg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetGVGFightInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetGVGFightInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sbp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGuildGvg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGuildGvg
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGuildGvg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sbp == nil {
				m.Sbp = &models.SingleBattleParam{}
			}
			if err := m.Sbp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGuildGvg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGuildGvg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGuildGvg(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGuildGvg
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGuildGvg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGuildGvg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGuildGvg
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGuildGvg
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGuildGvg
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGuildGvg        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGuildGvg          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGuildGvg = fmt.Errorf("proto: unexpected end of group")
)
