// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type MapNpc struct {
	Id                      values.Integer   `mapstructure:"id" json:"id"`
	Name                    string           `mapstructure:"name" json:"name"`
	NameLanguage            values.Integer   `mapstructure:"name_language" json:"name_language"`
	HeadImg                 string           `mapstructure:"head_img" json:"head_img"`
	BattleHeadIcon          string           `mapstructure:"battle_head_icon" json:"battle_head_icon"`
	MainHome3DModel         string           `mapstructure:"main_home_3_d_model" json:"main_home_3_d_model"`
	BattleMap3dModel        string           `mapstructure:"battle_map_3d_model" json:"battle_map_3d_model"`
	BattleMap2dModel        string           `mapstructure:"battle_map_2d_model" json:"battle_map_2d_model"`
	NpcTasks                []values.Integer `mapstructure:"npc_tasks" json:"npc_tasks"`
	NpcStaticCityLocation   []values.Integer `mapstructure:"npc_static_city_location" json:"npc_static_city_location"`
	NpcStaticMapLocation    []values.Integer `mapstructure:"npc_static_map_location" json:"npc_static_map_location"`
	SystemEntry             []values.Integer `mapstructure:"system_entry" json:"system_entry"`
	DialogueNpcImg          string           `mapstructure:"dialogue_npc_img" json:"dialogue_npc_img"`
	DialogueHalfBodyImg     string           `mapstructure:"dialogue_half_body_img" json:"dialogue_half_body_img"`
	NpcImgSize              []values.Integer `mapstructure:"npc_img_size" json:"npc_img_size"`
	DialogueImgSizeOffset   values.Integer   `mapstructure:"dialogue_img_size_offset" json:"dialogue_img_size_offset"`
	DialogueImgLeftPos      []values.Integer `mapstructure:"dialogue_img_left_pos" json:"dialogue_img_left_pos"`
	DialogueImgRightPos     []values.Integer `mapstructure:"dialogue_img_right_pos" json:"dialogue_img_right_pos"`
	DialogueHalfBodySpine   string           `mapstructure:"dialogue_half_body_spine" json:"dialogue_half_body_spine"`
	DialogueSpineSizeOffset values.Integer   `mapstructure:"dialogue_spine_size_offset" json:"dialogue_spine_size_offset"`
	DialogueSpineLeftPos    []values.Integer `mapstructure:"dialogue_spine_left_pos" json:"dialogue_spine_left_pos"`
	DialogueSpineRightPos   []values.Integer `mapstructure:"dialogue_spine_right_pos" json:"dialogue_spine_right_pos"`
	NpcHeadTalkOffset       []values.Integer `mapstructure:"npc_head_talk_offset" json:"npc_head_talk_offset"`
	BustCutParam            []values.Integer `mapstructure:"bust_cut_param" json:"bust_cut_param"`
	FresherGuideParam       []values.Integer `mapstructure:"fresher_guide_param" json:"fresher_guide_param"`
	DubbingId               values.Integer   `mapstructure:"dubbing_id" json:"dubbing_id"`
}

// parse func
func ParseMapNpc(data *Data) {
	if err := data.UnmarshalKey("map_npc", &h.mapNpc); err != nil {
		panic(errors.New("parse table MapNpc err:\n" + err.Error()))
	}
	for i, el := range h.mapNpc {
		h.mapNpcMap[el.Id] = i
	}
}

func (i *MapNpc) Len() int {
	return len(h.mapNpc)
}

func (i *MapNpc) List() []MapNpc {
	return h.mapNpc
}

func (i *MapNpc) GetMapNpcById(id values.Integer) (*MapNpc, bool) {
	index, ok := h.mapNpcMap[id]
	if !ok {
		return nil, false
	}
	return &h.mapNpc[index], true
}
