// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type DropMini struct {
	DropId     values.Integer                    `mapstructure:"drop_id" json:"drop_id"`
	Id         values.Integer                    `mapstructure:"id" json:"id"`
	ItemId     map[values.Integer]values.Integer `mapstructure:"item_id" json:"item_id"`
	ItemWeight values.Integer                    `mapstructure:"item_weight" json:"item_weight"`
}

// parse func
func ParseDropMini(data *Data) {
	if err := data.UnmarshalKey("drop_mini", &h.dropMini); err != nil {
		panic(errors.New("parse table DropMini err:\n" + err.Error()))
	}
	for i, el := range h.dropMini {
		if _, ok := h.dropMiniMap[el.DropId]; !ok {
			h.dropMiniMap[el.DropId] = map[values.Integer]int{el.Id: i}
		} else {
			h.dropMiniMap[el.DropId][el.Id] = i
		}
	}
}

func (i *DropMini) Len() int {
	return len(h.dropMini)
}

func (i *DropMini) List() []DropMini {
	return h.dropMini
}

func (i *DropMini) GetDropMiniById(parentId, id values.Integer) (*DropMini, bool) {
	item, ok := h.dropMiniMap[parentId]
	if !ok {
		return nil, false
	}
	index, ok := item[id]
	if !ok {
		return nil, false
	}
	return &h.dropMini[index], true
}
