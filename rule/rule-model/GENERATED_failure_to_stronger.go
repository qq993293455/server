// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type FailureToStronger struct {
	Id        values.Integer `mapstructure:"id" json:"id"`
	Language1 string         `mapstructure:"language1" json:"language1"`
	Language2 string         `mapstructure:"language2" json:"language2"`
	SystemId  values.Integer `mapstructure:"system_id" json:"system_id"`
	Resource  string         `mapstructure:"resource" json:"resource"`
}

// parse func
func ParseFailureToStronger(data *Data) {
	if err := data.UnmarshalKey("failure_to_stronger", &h.failureToStronger); err != nil {
		panic(errors.New("parse table FailureToStronger err:\n" + err.Error()))
	}
	for i, el := range h.failureToStronger {
		h.failureToStrongerMap[el.Id] = i
	}
}

func (i *FailureToStronger) Len() int {
	return len(h.failureToStronger)
}

func (i *FailureToStronger) List() []FailureToStronger {
	return h.failureToStronger
}

func (i *FailureToStronger) GetFailureToStrongerById(id values.Integer) (*FailureToStronger, bool) {
	index, ok := h.failureToStrongerMap[id]
	if !ok {
		return nil, false
	}
	return &h.failureToStronger[index], true
}
