// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type SpecialResBar struct {
	Id             values.Integer   `mapstructure:"id" json:"id"`
	Typ            values.Integer   `mapstructure:"typ" json:"typ"`
	ResourceTokens []values.Integer `mapstructure:"resource_tokens" json:"resource_tokens"`
}

// parse func
func ParseSpecialResBar(data *Data) {
	if err := data.UnmarshalKey("special_res_bar", &h.specialResBar); err != nil {
		panic(errors.New("parse table SpecialResBar err:\n" + err.Error()))
	}
	for i, el := range h.specialResBar {
		h.specialResBarMap[el.Id] = i
	}
}

func (i *SpecialResBar) Len() int {
	return len(h.specialResBar)
}

func (i *SpecialResBar) List() []SpecialResBar {
	return h.specialResBar
}

func (i *SpecialResBar) GetSpecialResBarById(id values.Integer) (*SpecialResBar, bool) {
	index, ok := h.specialResBarMap[id]
	if !ok {
		return nil, false
	}
	return &h.specialResBar[index], true
}
