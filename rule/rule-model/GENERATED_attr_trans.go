// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type AttrTrans struct {
	Id          values.Integer   `mapstructure:"id" json:"id"`
	AttrId      values.Integer   `mapstructure:"attr_id" json:"attr_id"`
	Transtype   values.Integer   `mapstructure:"transtype" json:"transtype"`
	TransattrId values.Integer   `mapstructure:"transattr_id" json:"transattr_id"`
	Transnum    values.Integer   `mapstructure:"transnum" json:"transnum"`
	Limithero   []values.Integer `mapstructure:"limithero" json:"limithero"`
}

// parse func
func ParseAttrTrans(data *Data) {
	if err := data.UnmarshalKey("attr_trans", &h.attrTrans); err != nil {
		panic(errors.New("parse table AttrTrans err:\n" + err.Error()))
	}
	for i, el := range h.attrTrans {
		h.attrTransMap[el.Id] = i
	}
}

func (i *AttrTrans) Len() int {
	return len(h.attrTrans)
}

func (i *AttrTrans) List() []AttrTrans {
	return h.attrTrans
}

func (i *AttrTrans) GetAttrTransById(id values.Integer) (*AttrTrans, bool) {
	index, ok := h.attrTransMap[id]
	if !ok {
		return nil, false
	}
	return &h.attrTrans[index], true
}
