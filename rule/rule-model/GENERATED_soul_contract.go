// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type SoulContract struct {
	Id             values.Integer                    `mapstructure:"id" json:"id"`
	RoleHero       values.Integer                    `mapstructure:"role_hero" json:"role_hero"`
	Title          string                            `mapstructure:"title" json:"title"`
	Rank           values.Integer                    `mapstructure:"rank" json:"rank"`
	Level          values.Integer                    `mapstructure:"level" json:"level"`
	Array          values.Integer                    `mapstructure:"array" json:"array"`
	Condition      []values.Integer                  `mapstructure:"condition" json:"condition"`
	RankCost       map[values.Integer]values.Integer `mapstructure:"rank_cost" json:"rank_cost"`
	RankAttrReward map[values.Integer]values.Integer `mapstructure:"rank_attr_reward" json:"rank_attr_reward"`
	RankItemReward map[values.Integer]values.Integer `mapstructure:"rank_item_reward" json:"rank_item_reward"`
	GiftPoint      values.Integer                    `mapstructure:"gift_point" json:"gift_point"`
}

// parse func
func ParseSoulContract(data *Data) {
	if err := data.UnmarshalKey("soul_contract", &h.soulContract); err != nil {
		panic(errors.New("parse table SoulContract err:\n" + err.Error()))
	}
	for i, el := range h.soulContract {
		h.soulContractMap[el.Id] = i
	}
}

func (i *SoulContract) Len() int {
	return len(h.soulContract)
}

func (i *SoulContract) List() []SoulContract {
	return h.soulContract
}

func (i *SoulContract) GetSoulContractById(id values.Integer) (*SoulContract, bool) {
	index, ok := h.soulContractMap[id]
	if !ok {
		return nil, false
	}
	return &h.soulContract[index], true
}
