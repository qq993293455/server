// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type ActivityLimitedtimePackagePay struct {
	ActivityLimitedtimePackageId values.Integer                    `mapstructure:"activity_limitedtime_package_id" json:"activity_limitedtime_package_id"`
	Id                           values.Integer                    `mapstructure:"id" json:"id"`
	RechargeInterval             []values.Integer                  `mapstructure:"recharge_interval" json:"recharge_interval"`
	ChargeId                     values.Integer                    `mapstructure:"charge_id" json:"charge_id"`
	BagProps                     map[values.Integer]values.Integer `mapstructure:"bag_props" json:"bag_props"`
	PayValue                     values.Integer                    `mapstructure:"pay_value" json:"pay_value"`
}

// parse func
func ParseActivityLimitedtimePackagePay(data *Data) {
	if err := data.UnmarshalKey("activity_limitedtime_package_pay", &h.activityLimitedtimePackagePay); err != nil {
		panic(errors.New("parse table ActivityLimitedtimePackagePay err:\n" + err.Error()))
	}
	for i, el := range h.activityLimitedtimePackagePay {
		if _, ok := h.activityLimitedtimePackagePayMap[el.ActivityLimitedtimePackageId]; !ok {
			h.activityLimitedtimePackagePayMap[el.ActivityLimitedtimePackageId] = map[values.Integer]int{el.Id: i}
		} else {
			h.activityLimitedtimePackagePayMap[el.ActivityLimitedtimePackageId][el.Id] = i
		}
	}
}

func (i *ActivityLimitedtimePackagePay) Len() int {
	return len(h.activityLimitedtimePackagePay)
}

func (i *ActivityLimitedtimePackagePay) List() []ActivityLimitedtimePackagePay {
	return h.activityLimitedtimePackagePay
}

func (i *ActivityLimitedtimePackagePay) GetActivityLimitedtimePackagePayById(parentId, id values.Integer) (*ActivityLimitedtimePackagePay, bool) {
	item, ok := h.activityLimitedtimePackagePayMap[parentId]
	if !ok {
		return nil, false
	}
	index, ok := item[id]
	if !ok {
		return nil, false
	}
	return &h.activityLimitedtimePackagePay[index], true
}
