// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Mail struct {
	Id         values.Integer `mapstructure:"id" json:"id"`
	Title      string         `mapstructure:"title" json:"title"`
	TitleId    string         `mapstructure:"title_id" json:"title_id"`
	Overdue    values.Integer `mapstructure:"overdue" json:"overdue"`
	Greating   string         `mapstructure:"greating" json:"greating"`
	GreatingId string         `mapstructure:"greating_id" json:"greating_id"`
	Content    string         `mapstructure:"content" json:"content"`
	ContentId  string         `mapstructure:"content_id" json:"content_id"`
}

// parse func
func ParseMail(data *Data) {
	if err := data.UnmarshalKey("mail", &h.mail); err != nil {
		panic(errors.New("parse table Mail err:\n" + err.Error()))
	}
	for i, el := range h.mail {
		h.mailMap[el.Id] = i
	}
}

func (i *Mail) Len() int {
	return len(h.mail)
}

func (i *Mail) List() []Mail {
	return h.mail
}

func (i *Mail) GetMailById(id values.Integer) (*Mail, bool) {
	index, ok := h.mailMap[id]
	if !ok {
		return nil, false
	}
	return &h.mail[index], true
}
