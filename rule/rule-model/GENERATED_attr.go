// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Attr struct {
	Id            values.Integer `mapstructure:"id" json:"id"`
	AdvancedType  values.Integer `mapstructure:"advanced_type" json:"advanced_type"`
	Attribute     string         `mapstructure:"attribute" json:"attribute"`
	ShowTpye      values.Integer `mapstructure:"show_tpye" json:"show_tpye"`
	TextId        string         `mapstructure:"text_id" json:"text_id"`
	DescriptionId string         `mapstructure:"description_id" json:"description_id"`
	Show          values.Integer `mapstructure:"show" json:"show"`
	PowerNum      values.Integer `mapstructure:"power_num" json:"power_num"`
	EquipScore    values.Integer `mapstructure:"equip_score" json:"equip_score"`
}

// parse func
func ParseAttr(data *Data) {
	if err := data.UnmarshalKey("attr", &h.attr); err != nil {
		panic(errors.New("parse table Attr err:\n" + err.Error()))
	}
	for i, el := range h.attr {
		h.attrMap[el.Id] = i
	}
}

func (i *Attr) Len() int {
	return len(h.attr)
}

func (i *Attr) List() []Attr {
	return h.attr
}

func (i *Attr) GetAttrById(id values.Integer) (*Attr, bool) {
	index, ok := h.attrMap[id]
	if !ok {
		return nil, false
	}
	return &h.attr[index], true
}
