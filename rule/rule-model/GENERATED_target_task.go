// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type TargetTask struct {
	Id       values.Integer `mapstructure:"id" json:"id"`
	Idx      values.Integer `mapstructure:"idx" json:"idx"`
	StageDes values.Integer `mapstructure:"stage_des" json:"stage_des"`
}

// parse func
func ParseTargetTask(data *Data) {
	if err := data.UnmarshalKey("target_task", &h.targetTask); err != nil {
		panic(errors.New("parse table TargetTask err:\n" + err.Error()))
	}
	for i, el := range h.targetTask {
		h.targetTaskMap[el.Id] = i
	}
}

func (i *TargetTask) Len() int {
	return len(h.targetTask)
}

func (i *TargetTask) List() []TargetTask {
	return h.targetTask
}

func (i *TargetTask) GetTargetTaskById(id values.Integer) (*TargetTask, bool) {
	index, ok := h.targetTaskMap[id]
	if !ok {
		return nil, false
	}
	return &h.targetTask[index], true
}
