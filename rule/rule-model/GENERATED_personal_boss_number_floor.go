// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type PersonalBossNumberFloor struct {
	Id             values.Integer `mapstructure:"id" json:"id"`
	MapId          values.Integer `mapstructure:"map_id" json:"map_id"`
	BossBirthPoint values.Integer `mapstructure:"boss_birth_point" json:"boss_birth_point"`
	BossBuffNum    values.Integer `mapstructure:"boss_buff_num" json:"boss_buff_num"`
	BehaviorTree   string         `mapstructure:"behavior_tree" json:"behavior_tree"`
}

// parse func
func ParsePersonalBossNumberFloor(data *Data) {
	if err := data.UnmarshalKey("personal_boss_number_floor", &h.personalBossNumberFloor); err != nil {
		panic(errors.New("parse table PersonalBossNumberFloor err:\n" + err.Error()))
	}
	for i, el := range h.personalBossNumberFloor {
		h.personalBossNumberFloorMap[el.Id] = i
	}
}

func (i *PersonalBossNumberFloor) Len() int {
	return len(h.personalBossNumberFloor)
}

func (i *PersonalBossNumberFloor) List() []PersonalBossNumberFloor {
	return h.personalBossNumberFloor
}

func (i *PersonalBossNumberFloor) GetPersonalBossNumberFloorById(id values.Integer) (*PersonalBossNumberFloor, bool) {
	index, ok := h.personalBossNumberFloorMap[id]
	if !ok {
		return nil, false
	}
	return &h.personalBossNumberFloor[index], true
}
