// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type EquipSlot struct {
	Id       values.Integer `mapstructure:"id" json:"id"`
	TextId   string         `mapstructure:"text_id" json:"text_id"`
	SystemId values.Integer `mapstructure:"system_id" json:"system_id"`
}

// parse func
func ParseEquipSlot(data *Data) {
	if err := data.UnmarshalKey("equip_slot", &h.equipSlot); err != nil {
		panic(errors.New("parse table EquipSlot err:\n" + err.Error()))
	}
	for i, el := range h.equipSlot {
		h.equipSlotMap[el.Id] = i
	}
}

func (i *EquipSlot) Len() int {
	return len(h.equipSlot)
}

func (i *EquipSlot) List() []EquipSlot {
	return h.equipSlot
}

func (i *EquipSlot) GetEquipSlotById(id values.Integer) (*EquipSlot, bool) {
	index, ok := h.equipSlotMap[id]
	if !ok {
		return nil, false
	}
	return &h.equipSlot[index], true
}
