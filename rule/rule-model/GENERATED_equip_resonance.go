// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type EquipResonance struct {
	Id             values.Integer                    `mapstructure:"id" json:"id"`
	HeroId         values.Integer                    `mapstructure:"hero_id" json:"hero_id"`
	StrLv          values.Integer                    `mapstructure:"str_lv" json:"str_lv"`
	AttributeValue map[values.Integer]values.Integer `mapstructure:"attribute_value" json:"attribute_value"`
}

// parse func
func ParseEquipResonance(data *Data) {
	if err := data.UnmarshalKey("equip_resonance", &h.equipResonance); err != nil {
		panic(errors.New("parse table EquipResonance err:\n" + err.Error()))
	}
	for i, el := range h.equipResonance {
		h.equipResonanceMap[el.Id] = i
	}
}

func (i *EquipResonance) Len() int {
	return len(h.equipResonance)
}

func (i *EquipResonance) List() []EquipResonance {
	return h.equipResonance
}

func (i *EquipResonance) GetEquipResonanceById(id values.Integer) (*EquipResonance, bool) {
	index, ok := h.equipResonanceMap[id]
	if !ok {
		return nil, false
	}
	return &h.equipResonance[index], true
}
