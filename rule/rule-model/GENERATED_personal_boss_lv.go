// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type PersonalBossLv struct {
	PersonalBossNumberFloorId values.Integer   `mapstructure:"personal_boss_number_floor_id" json:"personal_boss_number_floor_id"`
	Id                        values.Integer   `mapstructure:"id" json:"id"`
	PlayerLevelRange          []values.Integer `mapstructure:"player_level_range" json:"player_level_range"`
	BossHp                    values.Integer   `mapstructure:"boss_hp" json:"boss_hp"`
	BossAtk                   values.Integer   `mapstructure:"boss_atk" json:"boss_atk"`
	BossDef                   values.Integer   `mapstructure:"boss_def" json:"boss_def"`
	BattlePowerCoefficient    values.Integer   `mapstructure:"battle_power_coefficient" json:"battle_power_coefficient"`
	BossPropsFallPreview      []values.Integer `mapstructure:"boss_props_fall_preview" json:"boss_props_fall_preview"`
	DropListId                values.Integer   `mapstructure:"drop_list_id" json:"drop_list_id"`
}

// parse func
func ParsePersonalBossLv(data *Data) {
	if err := data.UnmarshalKey("personal_boss_lv", &h.personalBossLv); err != nil {
		panic(errors.New("parse table PersonalBossLv err:\n" + err.Error()))
	}
	for i, el := range h.personalBossLv {
		if _, ok := h.personalBossLvMap[el.PersonalBossNumberFloorId]; !ok {
			h.personalBossLvMap[el.PersonalBossNumberFloorId] = map[values.Integer]int{el.Id: i}
		} else {
			h.personalBossLvMap[el.PersonalBossNumberFloorId][el.Id] = i
		}
	}
}

func (i *PersonalBossLv) Len() int {
	return len(h.personalBossLv)
}

func (i *PersonalBossLv) List() []PersonalBossLv {
	return h.personalBossLv
}

func (i *PersonalBossLv) GetPersonalBossLvById(parentId, id values.Integer) (*PersonalBossLv, bool) {
	item, ok := h.personalBossLvMap[parentId]
	if !ok {
		return nil, false
	}
	index, ok := item[id]
	if !ok {
		return nil, false
	}
	return &h.personalBossLv[index], true
}
