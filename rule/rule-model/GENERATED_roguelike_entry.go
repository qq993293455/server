// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type RoguelikeEntry struct {
	Id             values.Integer                    `mapstructure:"id" json:"id"`
	Group          values.Integer                    `mapstructure:"group" json:"group"`
	Entryweight    values.Integer                    `mapstructure:"entryweight" json:"entryweight"`
	TextId         string                            `mapstructure:"text_id" json:"text_id"`
	Qualitysection map[values.Integer]values.Integer `mapstructure:"qualitysection" json:"qualitysection"`
}

// parse func
func ParseRoguelikeEntry(data *Data) {
	if err := data.UnmarshalKey("roguelike_entry", &h.roguelikeEntry); err != nil {
		panic(errors.New("parse table RoguelikeEntry err:\n" + err.Error()))
	}
	for i, el := range h.roguelikeEntry {
		h.roguelikeEntryMap[el.Id] = i
	}
}

func (i *RoguelikeEntry) Len() int {
	return len(h.roguelikeEntry)
}

func (i *RoguelikeEntry) List() []RoguelikeEntry {
	return h.roguelikeEntry
}

func (i *RoguelikeEntry) GetRoguelikeEntryById(id values.Integer) (*RoguelikeEntry, bool) {
	index, ok := h.roguelikeEntryMap[id]
	if !ok {
		return nil, false
	}
	return &h.roguelikeEntry[index], true
}
