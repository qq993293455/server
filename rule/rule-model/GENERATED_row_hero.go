// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type RowHero struct {
	Id                           values.Integer            `mapstructure:"id" json:"id"`
	OccName                      string                    `mapstructure:"occ_name" json:"occ_name"`
	Name                         string                    `mapstructure:"name" json:"name"`
	NickName                     string                    `mapstructure:"nick_name" json:"nick_name"`
	ObtainText                   string                    `mapstructure:"obtain_text" json:"obtain_text"`
	UnlockInfo                   string                    `mapstructure:"unlock_info" json:"unlock_info"`
	OriginId                     values.Integer            `mapstructure:"origin_id" json:"origin_id"`
	RoleDescribe                 string                    `mapstructure:"role_describe" json:"role_describe"`
	ProfessionalDescribe         string                    `mapstructure:"professional_describe" json:"professional_describe"`
	PrefabName                   string                    `mapstructure:"prefab_name" json:"prefab_name"`
	HeroImg                      string                    `mapstructure:"hero_img" json:"hero_img"`
	HeroSpine                    string                    `mapstructure:"hero_spine" json:"hero_spine"`
	HeroSpineOffsetInAvatarPanel []values.Integer          `mapstructure:"hero_spine_offset_in_avatar_panel" json:"hero_spine_offset_in_avatar_panel"`
	HeroSpineSize                []values.Integer          `mapstructure:"hero_spine_size" json:"hero_spine_size"`
	HeroImgSize                  []values.Integer          `mapstructure:"hero_img_size" json:"hero_img_size"`
	HeroImgOffsetInAvatarPanel   []values.Integer          `mapstructure:"hero_img_offset_in_avatar_panel" json:"hero_img_offset_in_avatar_panel"`
	HeroImgOffsetInNewCareer     []values.Integer          `mapstructure:"hero_img_offset_in_new_career" json:"hero_img_offset_in_new_career"`
	HeroImgOffsetInBattleLoading []values.Integer          `mapstructure:"hero_img_offset_in_battle_loading" json:"hero_img_offset_in_battle_loading"`
	HeroImgScaleInBattleLoading  []values.Integer          `mapstructure:"hero_img_scale_in_battle_loading" json:"hero_img_scale_in_battle_loading"`
	ImageDisplayLocation         values.Integer            `mapstructure:"image_display_location" json:"image_display_location"`
	BigHeadIcon                  string                    `mapstructure:"big_head_icon" json:"big_head_icon"`
	BgImg                        string                    `mapstructure:"bg_img" json:"bg_img"`
	PosOffset                    []values.Integer          `mapstructure:"pos_offset" json:"pos_offset"`
	RotationOffset               []values.Integer          `mapstructure:"rotation_offset" json:"rotation_offset"`
	ScaleOffset                  []values.Integer          `mapstructure:"scale_offset" json:"scale_offset"`
	EquipMod                     map[values.Integer]string `mapstructure:"equip_mod" json:"equip_mod"`
	EquipModHeight               map[values.Integer]string `mapstructure:"equip_mod_height" json:"equip_mod_height"`
	HeroDeviationEntryId         []values.Integer          `mapstructure:"hero_deviation_entry_id" json:"hero_deviation_entry_id"`
	HeroDeviationEntryNum        []values.Integer          `mapstructure:"hero_deviation_entry_num" json:"hero_deviation_entry_num"`
	RoleIcon                     string                    `mapstructure:"role_icon" json:"role_icon"`
	RoleIconBg                   string                    `mapstructure:"role_icon_bg" json:"role_icon_bg"`
	StoryGift                    []values.Integer          `mapstructure:"story_gift" json:"story_gift"`
	StoryText                    values.Integer            `mapstructure:"story_text" json:"story_text"`
	ArmsId                       values.Integer            `mapstructure:"arms_id" json:"arms_id"`
	ArmorId                      values.Integer            `mapstructure:"armor_id" json:"armor_id"`
	ModleId                      string                    `mapstructure:"modle_id" json:"modle_id"`
	HeadIcon                     string                    `mapstructure:"head_icon" json:"head_icon"`
	BattleHeadIcon               string                    `mapstructure:"battle_head_icon" json:"battle_head_icon"`
	Modle3dSize                  values.Integer            `mapstructure:"modle3d_size" json:"modle3d_size"`
	ModelProportion              values.Integer            `mapstructure:"model_proportion" json:"model_proportion"`
	BirthEffect                  values.Integer            `mapstructure:"birth_effect" json:"birth_effect"`
	ReplacementEffect            values.Integer            `mapstructure:"replacement_effect" json:"replacement_effect"`
	EffectEnlarge                values.Integer            `mapstructure:"effect_enlarge" json:"effect_enlarge"`
	Head2DSize                   values.Integer            `mapstructure:"head2_d_size" json:"head2_d_size"`
	PieceId                      string                    `mapstructure:"piece_id" json:"piece_id"`
	BoxColliderCenter            []values.Integer          `mapstructure:"box_collider_center" json:"box_collider_center"`
	BoxColliderSize              []values.Integer          `mapstructure:"box_collider_size" json:"box_collider_size"`
	AtKSkill                     []values.Integer          `mapstructure:"at_k_skill" json:"at_k_skill"`
	IntervalTime                 values.Integer            `mapstructure:"interval_time" json:"interval_time"`
	SkillId                      []values.Integer          `mapstructure:"skill_id" json:"skill_id"`
	TalentPlateId                []values.Integer          `mapstructure:"talent_plate_id" json:"talent_plate_id"`
	LuminescenceShderOnOff       values.Integer            `mapstructure:"luminescence_shder_on_off" json:"luminescence_shder_on_off"`
	Inhibit                      []values.Integer          `mapstructure:"inhibit" json:"inhibit"`
	LockRange                    values.Integer            `mapstructure:"lock_range" json:"lock_range"`
	PursuitRange                 values.Integer            `mapstructure:"pursuit_range" json:"pursuit_range"`
	AudioName                    string                    `mapstructure:"audio_name" json:"audio_name"`
	DeathAnimationTime           values.Integer            `mapstructure:"death_animation_time" json:"death_animation_time"`
	Move                         values.Integer            `mapstructure:"move" json:"move"`
	BeHitFlyParam                values.Integer            `mapstructure:"be_hit_fly_param" json:"be_hit_fly_param"`
	BeRepulseParam               values.Integer            `mapstructure:"be_repulse_param" json:"be_repulse_param"`
	SKillBtnLayOut               values.Integer            `mapstructure:"s_kill_btn_lay_out" json:"s_kill_btn_lay_out"`
	TurnSpeed                    values.Integer            `mapstructure:"turn_speed" json:"turn_speed"`
	ActionFunsionMap             map[string]values.Integer `mapstructure:"action_funsion_map" json:"action_funsion_map"`
	SoulPowerLimit               values.Integer            `mapstructure:"soul_power_limit" json:"soul_power_limit"`
	SoulPowerPerSec              values.Integer            `mapstructure:"soul_power_per_sec" json:"soul_power_per_sec"`
	SoulPowerByAtk               values.Integer            `mapstructure:"soul_power_by_atk" json:"soul_power_by_atk"`
	DubbingId1                   values.Integer            `mapstructure:"dubbing_id1" json:"dubbing_id1"`
	DubbingId2                   values.Integer            `mapstructure:"dubbing_id2" json:"dubbing_id2"`
	FashionId                    values.Integer            `mapstructure:"fashion_id" json:"fashion_id"`
}

// parse func
func ParseRowHero(data *Data) {
	if err := data.UnmarshalKey("row_hero", &h.rowHero); err != nil {
		panic(errors.New("parse table RowHero err:\n" + err.Error()))
	}
	for i, el := range h.rowHero {
		h.rowHeroMap[el.Id] = i
	}
}

func (i *RowHero) Len() int {
	return len(h.rowHero)
}

func (i *RowHero) List() []RowHero {
	return h.rowHero
}

func (i *RowHero) GetRowHeroById(id values.Integer) (*RowHero, bool) {
	index, ok := h.rowHeroMap[id]
	if !ok {
		return nil, false
	}
	return &h.rowHero[index], true
}
