// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type HomeAvatar struct {
	Id             values.Integer   `mapstructure:"id" json:"id"`
	PrefabName     string           `mapstructure:"prefab_name" json:"prefab_name"`
	BgImg          string           `mapstructure:"bg_img" json:"bg_img"`
	PosOffset      []values.Integer `mapstructure:"pos_offset" json:"pos_offset"`
	RotationOffset []values.Integer `mapstructure:"rotation_offset" json:"rotation_offset"`
	ScaleOffset    []values.Integer `mapstructure:"scale_offset" json:"scale_offset"`
}

// parse func
func ParseHomeAvatar(data *Data) {
	if err := data.UnmarshalKey("home_avatar", &h.homeAvatar); err != nil {
		panic(errors.New("parse table HomeAvatar err:\n" + err.Error()))
	}
	for i, el := range h.homeAvatar {
		h.homeAvatarMap[el.Id] = i
	}
}

func (i *HomeAvatar) Len() int {
	return len(h.homeAvatar)
}

func (i *HomeAvatar) List() []HomeAvatar {
	return h.homeAvatar
}

func (i *HomeAvatar) GetHomeAvatarById(id values.Integer) (*HomeAvatar, bool) {
	index, ok := h.homeAvatarMap[id]
	if !ok {
		return nil, false
	}
	return &h.homeAvatar[index], true
}
