// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type BuffEffect struct {
	Id          values.Integer `mapstructure:"id" json:"id"`
	SkillName   string         `mapstructure:"skill_name" json:"skill_name"`
	AttributeId values.Integer `mapstructure:"attribute_id" json:"attribute_id"`
	LogicId     values.Integer `mapstructure:"logic_id" json:"logic_id"`
}

// parse func
func ParseBuffEffect(data *Data) {
	if err := data.UnmarshalKey("buff_effect", &h.buffEffect); err != nil {
		panic(errors.New("parse table BuffEffect err:\n" + err.Error()))
	}
	for i, el := range h.buffEffect {
		h.buffEffectMap[el.Id] = i
	}
}

func (i *BuffEffect) Len() int {
	return len(h.buffEffect)
}

func (i *BuffEffect) List() []BuffEffect {
	return h.buffEffect
}

func (i *BuffEffect) GetBuffEffectById(id values.Integer) (*BuffEffect, bool) {
	index, ok := h.buffEffectMap[id]
	if !ok {
		return nil, false
	}
	return &h.buffEffect[index], true
}
