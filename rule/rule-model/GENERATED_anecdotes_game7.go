// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type AnecdotesGame7 struct {
	Id        values.Integer                    `mapstructure:"id" json:"id"`
	NameText  values.Integer                    `mapstructure:"name_text" json:"name_text"`
	ChestImg  string                            `mapstructure:"chest_img" json:"chest_img"`
	StoryText []string                          `mapstructure:"story_text" json:"story_text"`
	GameLv    values.Integer                    `mapstructure:"game_lv" json:"game_lv"`
	Weight    values.Integer                    `mapstructure:"weight" json:"weight"`
	Reward    map[values.Integer]values.Integer `mapstructure:"reward" json:"reward"`
}

// parse func
func ParseAnecdotesGame7(data *Data) {
	if err := data.UnmarshalKey("anecdotes_game7", &h.anecdotesGame7); err != nil {
		panic(errors.New("parse table AnecdotesGame7 err:\n" + err.Error()))
	}
	for i, el := range h.anecdotesGame7 {
		h.anecdotesGame7Map[el.Id] = i
	}
}

func (i *AnecdotesGame7) Len() int {
	return len(h.anecdotesGame7)
}

func (i *AnecdotesGame7) List() []AnecdotesGame7 {
	return h.anecdotesGame7
}

func (i *AnecdotesGame7) GetAnecdotesGame7ById(id values.Integer) (*AnecdotesGame7, bool) {
	index, ok := h.anecdotesGame7Map[id]
	if !ok {
		return nil, false
	}
	return &h.anecdotesGame7[index], true
}
