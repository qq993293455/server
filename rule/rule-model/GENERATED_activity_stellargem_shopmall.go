// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type ActivityStellargemShopmall struct {
	Id                 values.Integer   `mapstructure:"id" json:"id"`
	StellarGemNum      []values.Integer `mapstructure:"stellar_gem_num" json:"stellar_gem_num"`
	SourceGemNum       []values.Integer `mapstructure:"source_gem_num" json:"source_gem_num"`
	ExtraGemNum        []values.Integer `mapstructure:"extra_gem_num" json:"extra_gem_num"`
	GiftLanguage       values.Integer   `mapstructure:"gift_language" json:"gift_language"`
	BuyGiftLanguage    values.Integer   `mapstructure:"buy_gift_language" json:"buy_gift_language"`
	StellarGemIconName string           `mapstructure:"stellar_gem_icon_name" json:"stellar_gem_icon_name"`
	Tags               string           `mapstructure:"tags" json:"tags"`
	GiftTags           string           `mapstructure:"gift_tags" json:"gift_tags"`
	PurchasePrice      values.Integer   `mapstructure:"purchase_price" json:"purchase_price"`
}

// parse func
func ParseActivityStellargemShopmall(data *Data) {
	if err := data.UnmarshalKey("activity_stellargem_shopmall", &h.activityStellargemShopmall); err != nil {
		panic(errors.New("parse table ActivityStellargemShopmall err:\n" + err.Error()))
	}
	for i, el := range h.activityStellargemShopmall {
		h.activityStellargemShopmallMap[el.Id] = i
	}
}

func (i *ActivityStellargemShopmall) Len() int {
	return len(h.activityStellargemShopmall)
}

func (i *ActivityStellargemShopmall) List() []ActivityStellargemShopmall {
	return h.activityStellargemShopmall
}

func (i *ActivityStellargemShopmall) GetActivityStellargemShopmallById(id values.Integer) (*ActivityStellargemShopmall, bool) {
	index, ok := h.activityStellargemShopmallMap[id]
	if !ok {
		return nil, false
	}
	return &h.activityStellargemShopmall[index], true
}
