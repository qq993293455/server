// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type PersonalBossPassingReward struct {
	Id               values.Integer                    `mapstructure:"id" json:"id"`
	PlayerLevelRange []values.Integer                  `mapstructure:"player_level_range" json:"player_level_range"`
	ActivityReward   map[values.Integer]values.Integer `mapstructure:"activity_reward" json:"activity_reward"`
}

// parse func
func ParsePersonalBossPassingReward(data *Data) {
	if err := data.UnmarshalKey("personal_boss_passing_reward", &h.personalBossPassingReward); err != nil {
		panic(errors.New("parse table PersonalBossPassingReward err:\n" + err.Error()))
	}
	for i, el := range h.personalBossPassingReward {
		h.personalBossPassingRewardMap[el.Id] = i
	}
}

func (i *PersonalBossPassingReward) Len() int {
	return len(h.personalBossPassingReward)
}

func (i *PersonalBossPassingReward) List() []PersonalBossPassingReward {
	return h.personalBossPassingReward
}

func (i *PersonalBossPassingReward) GetPersonalBossPassingRewardById(id values.Integer) (*PersonalBossPassingReward, bool) {
	index, ok := h.personalBossPassingRewardMap[id]
	if !ok {
		return nil, false
	}
	return &h.personalBossPassingReward[index], true
}
