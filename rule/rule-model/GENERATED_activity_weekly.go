// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type ActivityWeekly struct {
	Id               values.Integer `mapstructure:"id" json:"id"`
	TabUi            []string       `mapstructure:"tab_ui" json:"tab_ui"`
	Language1        []string       `mapstructure:"language1" json:"language1"`
	Language2        []string       `mapstructure:"language2" json:"language2"`
	Language3        []string       `mapstructure:"language3" json:"language3"`
	LanguageRankTips string         `mapstructure:"language_rank_tips" json:"language_rank_tips"`
	Tab2Tips         string         `mapstructure:"tab2_tips" json:"tab2_tips"`
}

// parse func
func ParseActivityWeekly(data *Data) {
	if err := data.UnmarshalKey("activity_weekly", &h.activityWeekly); err != nil {
		panic(errors.New("parse table ActivityWeekly err:\n" + err.Error()))
	}
	for i, el := range h.activityWeekly {
		h.activityWeeklyMap[el.Id] = i
	}
}

func (i *ActivityWeekly) Len() int {
	return len(h.activityWeekly)
}

func (i *ActivityWeekly) List() []ActivityWeekly {
	return h.activityWeekly
}

func (i *ActivityWeekly) GetActivityWeeklyById(id values.Integer) (*ActivityWeekly, bool) {
	index, ok := h.activityWeeklyMap[id]
	if !ok {
		return nil, false
	}
	return &h.activityWeekly[index], true
}
