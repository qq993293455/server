// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Begining struct {
	Id       values.Integer `mapstructure:"id" json:"id"`
	Rewardid values.Integer `mapstructure:"rewardid" json:"rewardid"`
	Count    values.Integer `mapstructure:"count" json:"count"`
	Typ      values.Integer `mapstructure:"typ" json:"typ"`
}

// parse func
func ParseBegining(data *Data) {
	if err := data.UnmarshalKey("begining", &h.begining); err != nil {
		panic(errors.New("parse table Begining err:\n" + err.Error()))
	}
	for i, el := range h.begining {
		h.beginingMap[el.Id] = i
	}
}

func (i *Begining) Len() int {
	return len(h.begining)
}

func (i *Begining) List() []Begining {
	return h.begining
}

func (i *Begining) GetBeginingById(id values.Integer) (*Begining, bool) {
	index, ok := h.beginingMap[id]
	if !ok {
		return nil, false
	}
	return &h.begining[index], true
}
