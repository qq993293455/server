// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type RecycleType struct {
	Id         values.Integer   `mapstructure:"id" json:"id"`
	AddBagTime []values.Integer `mapstructure:"add_bag_time" json:"add_bag_time"`
	Text       values.Integer   `mapstructure:"text" json:"text"`
}

// parse func
func ParseRecycleType(data *Data) {
	if err := data.UnmarshalKey("recycle_type", &h.recycleType); err != nil {
		panic(errors.New("parse table RecycleType err:\n" + err.Error()))
	}
	for i, el := range h.recycleType {
		h.recycleTypeMap[el.Id] = i
	}
}

func (i *RecycleType) Len() int {
	return len(h.recycleType)
}

func (i *RecycleType) List() []RecycleType {
	return h.recycleType
}

func (i *RecycleType) GetRecycleTypeById(id values.Integer) (*RecycleType, bool) {
	index, ok := h.recycleTypeMap[id]
	if !ok {
		return nil, false
	}
	return &h.recycleType[index], true
}
