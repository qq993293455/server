// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Exchange struct {
	Id                 values.Integer   `mapstructure:"id" json:"id"`
	ExchangeTargetType values.Integer   `mapstructure:"exchange_target_type" json:"exchange_target_type"`
	Count              values.Integer   `mapstructure:"count" json:"count"`
	Typ                []values.Integer `mapstructure:"typ" json:"typ"`
}

// parse func
func ParseExchange(data *Data) {
	if err := data.UnmarshalKey("exchange", &h.exchange); err != nil {
		panic(errors.New("parse table Exchange err:\n" + err.Error()))
	}
	for i, el := range h.exchange {
		h.exchangeMap[el.Id] = i
	}
}

func (i *Exchange) Len() int {
	return len(h.exchange)
}

func (i *Exchange) List() []Exchange {
	return h.exchange
}

func (i *Exchange) GetExchangeById(id values.Integer) (*Exchange, bool) {
	index, ok := h.exchangeMap[id]
	if !ok {
		return nil, false
	}
	return &h.exchange[index], true
}
