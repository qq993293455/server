// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type AnecdotesReward struct {
	Id       values.Integer `mapstructure:"id" json:"id"`
	Name     string         `mapstructure:"name" json:"name"`
	ChestImg string         `mapstructure:"chest_img" json:"chest_img"`
	GameLv   values.Integer `mapstructure:"game_lv" json:"game_lv"`
	Weight   values.Integer `mapstructure:"weight" json:"weight"`
}

// parse func
func ParseAnecdotesReward(data *Data) {
	if err := data.UnmarshalKey("anecdotes_reward", &h.anecdotesReward); err != nil {
		panic(errors.New("parse table AnecdotesReward err:\n" + err.Error()))
	}
	for i, el := range h.anecdotesReward {
		h.anecdotesRewardMap[el.Id] = i
	}
}

func (i *AnecdotesReward) Len() int {
	return len(h.anecdotesReward)
}

func (i *AnecdotesReward) List() []AnecdotesReward {
	return h.anecdotesReward
}

func (i *AnecdotesReward) GetAnecdotesRewardById(id values.Integer) (*AnecdotesReward, bool) {
	index, ok := h.anecdotesRewardMap[id]
	if !ok {
		return nil, false
	}
	return &h.anecdotesReward[index], true
}
