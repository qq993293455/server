// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Robot struct {
	Id       values.Integer                    `mapstructure:"id" json:"id"`
	ConfigId values.Integer                    `mapstructure:"config_id" json:"config_id"`
	Attr     map[values.Integer]values.Integer `mapstructure:"attr" json:"attr"`
	SkillId  []values.Integer                  `mapstructure:"skill_id" json:"skill_id"`
	BuffId   []values.Integer                  `mapstructure:"buff_id" json:"buff_id"`
	Lv       values.Integer                    `mapstructure:"lv" json:"lv"`
	Combat   values.Integer                    `mapstructure:"combat" json:"combat"`
}

// parse func
func ParseRobot(data *Data) {
	if err := data.UnmarshalKey("robot", &h.robot); err != nil {
		panic(errors.New("parse table Robot err:\n" + err.Error()))
	}
	for i, el := range h.robot {
		h.robotMap[el.Id] = i
	}
}

func (i *Robot) Len() int {
	return len(h.robot)
}

func (i *Robot) List() []Robot {
	return h.robot
}

func (i *Robot) GetRobotById(id values.Integer) (*Robot, bool) {
	index, ok := h.robotMap[id]
	if !ok {
		return nil, false
	}
	return &h.robot[index], true
}
