// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type MapTransmit struct {
	Id            values.Integer   `mapstructure:"id" json:"id"`
	MapScene      values.Integer   `mapstructure:"map_scene" json:"map_scene"`
	PosTransmit   []values.Integer `mapstructure:"pos_transmit" json:"pos_transmit"`
	RangeTransmit values.Integer   `mapstructure:"range_transmit" json:"range_transmit"`
}

// parse func
func ParseMapTransmit(data *Data) {
	if err := data.UnmarshalKey("map_transmit", &h.mapTransmit); err != nil {
		panic(errors.New("parse table MapTransmit err:\n" + err.Error()))
	}
	for i, el := range h.mapTransmit {
		h.mapTransmitMap[el.Id] = i
	}
}

func (i *MapTransmit) Len() int {
	return len(h.mapTransmit)
}

func (i *MapTransmit) List() []MapTransmit {
	return h.mapTransmit
}

func (i *MapTransmit) GetMapTransmitById(id values.Integer) (*MapTransmit, bool) {
	index, ok := h.mapTransmitMap[id]
	if !ok {
		return nil, false
	}
	return &h.mapTransmit[index], true
}
