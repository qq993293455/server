// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type MapBuilding struct {
	Id           values.Integer `mapstructure:"id" json:"id"`
	BuildingImg  []string       `mapstructure:"building_img" json:"building_img"`
	BuildingName string         `mapstructure:"building_name" json:"building_name"`
	MapId        values.Integer `mapstructure:"map_id" json:"map_id"`
	BuildingPos  values.Integer `mapstructure:"building_pos" json:"building_pos"`
	EValue       string         `mapstructure:"e_value" json:"e_value"`
}

// parse func
func ParseMapBuilding(data *Data) {
	if err := data.UnmarshalKey("map_building", &h.mapBuilding); err != nil {
		panic(errors.New("parse table MapBuilding err:\n" + err.Error()))
	}
	for i, el := range h.mapBuilding {
		h.mapBuildingMap[el.Id] = i
	}
}

func (i *MapBuilding) Len() int {
	return len(h.mapBuilding)
}

func (i *MapBuilding) List() []MapBuilding {
	return h.mapBuilding
}

func (i *MapBuilding) GetMapBuildingById(id values.Integer) (*MapBuilding, bool) {
	index, ok := h.mapBuildingMap[id]
	if !ok {
		return nil, false
	}
	return &h.mapBuilding[index], true
}
