// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Talentplate struct {
	Id         values.Integer     `mapstructure:"id" json:"id"`
	ShapeData  [][]values.Integer `mapstructure:"shape_data" json:"shape_data"`
	UnlockData []values.Integer   `mapstructure:"unlock_data" json:"unlock_data"`
}

// parse func
func ParseTalentplate(data *Data) {
	if err := data.UnmarshalKey("talentplate", &h.talentplate); err != nil {
		panic(errors.New("parse table Talentplate err:\n" + err.Error()))
	}
	for i, el := range h.talentplate {
		h.talentplateMap[el.Id] = i
	}
}

func (i *Talentplate) Len() int {
	return len(h.talentplate)
}

func (i *Talentplate) List() []Talentplate {
	return h.talentplate
}

func (i *Talentplate) GetTalentplateById(id values.Integer) (*Talentplate, bool) {
	index, ok := h.talentplateMap[id]
	if !ok {
		return nil, false
	}
	return &h.talentplate[index], true
}
