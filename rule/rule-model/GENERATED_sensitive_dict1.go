// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type SensitiveDict1 struct {
	Id   values.Integer `mapstructure:"id" json:"id"`
	Word string         `mapstructure:"word" json:"word"`
}

// parse func
func ParseSensitiveDict1(data *Data) {
	if err := data.UnmarshalKey("sensitive_dict1", &h.sensitiveDict1); err != nil {
		panic(errors.New("parse table SensitiveDict1 err:\n" + err.Error()))
	}
	for i, el := range h.sensitiveDict1 {
		h.sensitiveDict1Map[el.Id] = i
	}
}

func (i *SensitiveDict1) Len() int {
	return len(h.sensitiveDict1)
}

func (i *SensitiveDict1) List() []SensitiveDict1 {
	return h.sensitiveDict1
}

func (i *SensitiveDict1) GetSensitiveDict1ById(id values.Integer) (*SensitiveDict1, bool) {
	index, ok := h.sensitiveDict1Map[id]
	if !ok {
		return nil, false
	}
	return &h.sensitiveDict1[index], true
}
