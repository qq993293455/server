// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type ActivityWeeklyRank struct {
	Id             values.Integer   `mapstructure:"id" json:"id"`
	ActivityId     values.Integer   `mapstructure:"activity_id" json:"activity_id"`
	RankUpperLimit values.Integer   `mapstructure:"rank_upper_limit" json:"rank_upper_limit"`
	RankLowerLimit values.Integer   `mapstructure:"rank_lower_limit" json:"rank_lower_limit"`
	Reward         []values.Integer `mapstructure:"reward" json:"reward"`
}

// parse func
func ParseActivityWeeklyRank(data *Data) {
	if err := data.UnmarshalKey("activity_weekly_rank", &h.activityWeeklyRank); err != nil {
		panic(errors.New("parse table ActivityWeeklyRank err:\n" + err.Error()))
	}
	for i, el := range h.activityWeeklyRank {
		h.activityWeeklyRankMap[el.Id] = i
	}
}

func (i *ActivityWeeklyRank) Len() int {
	return len(h.activityWeeklyRank)
}

func (i *ActivityWeeklyRank) List() []ActivityWeeklyRank {
	return h.activityWeeklyRank
}

func (i *ActivityWeeklyRank) GetActivityWeeklyRankById(id values.Integer) (*ActivityWeeklyRank, bool) {
	index, ok := h.activityWeeklyRankMap[id]
	if !ok {
		return nil, false
	}
	return &h.activityWeeklyRank[index], true
}
