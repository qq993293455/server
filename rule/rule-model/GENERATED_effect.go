// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Effect struct {
	Id            values.Integer `mapstructure:"id" json:"id"`
	AssetName     string         `mapstructure:"asset_name" json:"asset_name"`
	IsChangeScale values.Integer `mapstructure:"is_change_scale" json:"is_change_scale"`
}

// parse func
func ParseEffect(data *Data) {
	if err := data.UnmarshalKey("effect", &h.effect); err != nil {
		panic(errors.New("parse table Effect err:\n" + err.Error()))
	}
	for i, el := range h.effect {
		h.effectMap[el.Id] = i
	}
}

func (i *Effect) Len() int {
	return len(h.effect)
}

func (i *Effect) List() []Effect {
	return h.effect
}

func (i *Effect) GetEffectById(id values.Integer) (*Effect, bool) {
	index, ok := h.effectMap[id]
	if !ok {
		return nil, false
	}
	return &h.effect[index], true
}
