// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type GuildIntegral struct {
	Id      values.Integer `mapstructure:"id" json:"id"`
	RankNum values.Integer `mapstructure:"rank_num" json:"rank_num"`
}

// parse func
func ParseGuildIntegral(data *Data) {
	if err := data.UnmarshalKey("guild__integral", &h.guildIntegral); err != nil {
		panic(errors.New("parse table GuildIntegral err:\n" + err.Error()))
	}
	for i, el := range h.guildIntegral {
		h.guildIntegralMap[el.Id] = i
	}
}

func (i *GuildIntegral) Len() int {
	return len(h.guildIntegral)
}

func (i *GuildIntegral) List() []GuildIntegral {
	return h.guildIntegral
}

func (i *GuildIntegral) GetGuildIntegralById(id values.Integer) (*GuildIntegral, bool) {
	index, ok := h.guildIntegralMap[id]
	if !ok {
		return nil, false
	}
	return &h.guildIntegral[index], true
}
