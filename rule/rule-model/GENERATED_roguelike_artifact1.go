// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type RoguelikeArtifact1 struct {
	Id         values.Integer                    `mapstructure:"id" json:"id"`
	CardName   string                            `mapstructure:"card_name" json:"card_name"`
	CardIcon   string                            `mapstructure:"card_icon" json:"card_icon"`
	CardText   string                            `mapstructure:"card_text" json:"card_text"`
	CardWeight map[values.Integer]values.Integer `mapstructure:"card_weight" json:"card_weight"`
}

// parse func
func ParseRoguelikeArtifact1(data *Data) {
	if err := data.UnmarshalKey("roguelike_artifact1", &h.roguelikeArtifact1); err != nil {
		panic(errors.New("parse table RoguelikeArtifact1 err:\n" + err.Error()))
	}
	for i, el := range h.roguelikeArtifact1 {
		h.roguelikeArtifact1Map[el.Id] = i
	}
}

func (i *RoguelikeArtifact1) Len() int {
	return len(h.roguelikeArtifact1)
}

func (i *RoguelikeArtifact1) List() []RoguelikeArtifact1 {
	return h.roguelikeArtifact1
}

func (i *RoguelikeArtifact1) GetRoguelikeArtifact1ById(id values.Integer) (*RoguelikeArtifact1, bool) {
	index, ok := h.roguelikeArtifact1Map[id]
	if !ok {
		return nil, false
	}
	return &h.roguelikeArtifact1[index], true
}
