// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Notice struct {
	Id         values.Integer   `mapstructure:"id" json:"id"`
	Typ        values.Integer   `mapstructure:"typ" json:"typ"`
	Priority   values.Integer   `mapstructure:"priority" json:"priority"`
	Language   values.Integer   `mapstructure:"language" json:"language"`
	IsShowChat bool             `mapstructure:"is_show_chat" json:"is_show_chat"`
	Channels   []values.Integer `mapstructure:"channels" json:"channels"`
}

// parse func
func ParseNotice(data *Data) {
	if err := data.UnmarshalKey("notice", &h.notice); err != nil {
		panic(errors.New("parse table Notice err:\n" + err.Error()))
	}
	for i, el := range h.notice {
		h.noticeMap[el.Id] = i
	}
}

func (i *Notice) Len() int {
	return len(h.notice)
}

func (i *Notice) List() []Notice {
	return h.notice
}

func (i *Notice) GetNoticeById(id values.Integer) (*Notice, bool) {
	index, ok := h.noticeMap[id]
	if !ok {
		return nil, false
	}
	return &h.notice[index], true
}
