// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type NpcDialogue struct {
	Id             values.Integer `mapstructure:"id" json:"id"`
	Typ            values.Integer `mapstructure:"typ" json:"typ"`
	AudioType      values.Integer `mapstructure:"audio_type" json:"audio_type"`
	NextDialogueId values.Integer `mapstructure:"next_dialogue_id" json:"next_dialogue_id"`
	StartAnimeId   values.Integer `mapstructure:"start_anime_id" json:"start_anime_id"`
	EndAnimeId     values.Integer `mapstructure:"end_anime_id" json:"end_anime_id"`
}

// parse func
func ParseNpcDialogue(data *Data) {
	if err := data.UnmarshalKey("npc_dialogue", &h.npcDialogue); err != nil {
		panic(errors.New("parse table NpcDialogue err:\n" + err.Error()))
	}
	for i, el := range h.npcDialogue {
		h.npcDialogueMap[el.Id] = i
	}
}

func (i *NpcDialogue) Len() int {
	return len(h.npcDialogue)
}

func (i *NpcDialogue) List() []NpcDialogue {
	return h.npcDialogue
}

func (i *NpcDialogue) GetNpcDialogueById(id values.Integer) (*NpcDialogue, bool) {
	index, ok := h.npcDialogueMap[id]
	if !ok {
		return nil, false
	}
	return &h.npcDialogue[index], true
}
