// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Popup struct {
	Id     values.Integer                    `mapstructure:"id" json:"id"`
	Reward map[values.Integer]values.Integer `mapstructure:"reward" json:"reward"`
}

// parse func
func ParsePopup(data *Data) {
	if err := data.UnmarshalKey("popup", &h.popup); err != nil {
		panic(errors.New("parse table Popup err:\n" + err.Error()))
	}
	for i, el := range h.popup {
		h.popupMap[el.Id] = i
	}
}

func (i *Popup) Len() int {
	return len(h.popup)
}

func (i *Popup) List() []Popup {
	return h.popup
}

func (i *Popup) GetPopupById(id values.Integer) (*Popup, bool) {
	index, ok := h.popupMap[id]
	if !ok {
		return nil, false
	}
	return &h.popup[index], true
}
