// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Sample struct {
	Id       values.Integer `mapstructure:"id" json:"id"`
	Name     string         `mapstructure:"name" json:"name"`
	NorSkill values.Integer `mapstructure:"nor_skill" json:"nor_skill"`
	Atk      values.Integer `mapstructure:"atk" json:"atk"`
	Atkspeed values.Integer `mapstructure:"atkspeed" json:"atkspeed"`
	Hp       values.Integer `mapstructure:"hp" json:"hp"`
	Move     values.Integer `mapstructure:"move" json:"move"`
}

// parse func
func ParseSample(data *Data) {
	if err := data.UnmarshalKey("sample", &h.sample); err != nil {
		panic(errors.New("parse table Sample err:\n" + err.Error()))
	}
	for i, el := range h.sample {
		h.sampleMap[el.Id] = i
	}
}

func (i *Sample) Len() int {
	return len(h.sample)
}

func (i *Sample) List() []Sample {
	return h.sample
}

func (i *Sample) GetSampleById(id values.Integer) (*Sample, bool) {
	index, ok := h.sampleMap[id]
	if !ok {
		return nil, false
	}
	return &h.sample[index], true
}
