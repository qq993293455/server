// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type ActivityWeeklyChallenge struct {
	Id         values.Integer   `mapstructure:"id" json:"id"`
	ActivityId values.Integer   `mapstructure:"activity_id" json:"activity_id"`
	Typ        values.Integer   `mapstructure:"typ" json:"typ"`
	Times      values.Integer   `mapstructure:"times" json:"times"`
	Reward     []values.Integer `mapstructure:"reward" json:"reward"`
}

// parse func
func ParseActivityWeeklyChallenge(data *Data) {
	if err := data.UnmarshalKey("activity_weekly_challenge", &h.activityWeeklyChallenge); err != nil {
		panic(errors.New("parse table ActivityWeeklyChallenge err:\n" + err.Error()))
	}
	for i, el := range h.activityWeeklyChallenge {
		h.activityWeeklyChallengeMap[el.Id] = i
	}
}

func (i *ActivityWeeklyChallenge) Len() int {
	return len(h.activityWeeklyChallenge)
}

func (i *ActivityWeeklyChallenge) List() []ActivityWeeklyChallenge {
	return h.activityWeeklyChallenge
}

func (i *ActivityWeeklyChallenge) GetActivityWeeklyChallengeById(id values.Integer) (*ActivityWeeklyChallenge, bool) {
	index, ok := h.activityWeeklyChallengeMap[id]
	if !ok {
		return nil, false
	}
	return &h.activityWeeklyChallenge[index], true
}
