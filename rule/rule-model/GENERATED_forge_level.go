// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type ForgeLevel struct {
	Id                      values.Integer                    `mapstructure:"id" json:"id"`
	Title                   string                            `mapstructure:"title" json:"title"`
	Exp                     values.Integer                    `mapstructure:"exp" json:"exp"`
	EquipLevel              values.Integer                    `mapstructure:"equip_level" json:"equip_level"`
	RecipeLevel             values.Integer                    `mapstructure:"recipe_level" json:"recipe_level"`
	FixedQualityProbability map[values.Integer]values.Integer `mapstructure:"fixed_quality_probability" json:"fixed_quality_probability"`
}

// parse func
func ParseForgeLevel(data *Data) {
	if err := data.UnmarshalKey("forge_level", &h.forgeLevel); err != nil {
		panic(errors.New("parse table ForgeLevel err:\n" + err.Error()))
	}
	for i, el := range h.forgeLevel {
		h.forgeLevelMap[el.Id] = i
	}
}

func (i *ForgeLevel) Len() int {
	return len(h.forgeLevel)
}

func (i *ForgeLevel) List() []ForgeLevel {
	return h.forgeLevel
}

func (i *ForgeLevel) GetForgeLevelById(id values.Integer) (*ForgeLevel, bool) {
	index, ok := h.forgeLevelMap[id]
	if !ok {
		return nil, false
	}
	return &h.forgeLevel[index], true
}
