// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type PvPRankReward struct {
	Id             values.Integer                    `mapstructure:"id" json:"id"`
	RankUpperLimit values.Integer                    `mapstructure:"rank_upper_limit" json:"rank_upper_limit"`
	RankLowerLimit values.Integer                    `mapstructure:"rank_lower_limit" json:"rank_lower_limit"`
	DailyReward    map[values.Integer]values.Integer `mapstructure:"daily_reward" json:"daily_reward"`
	SeasonReward   map[values.Integer]values.Integer `mapstructure:"season_reward" json:"season_reward"`
}

// parse func
func ParsePvPRankReward(data *Data) {
	if err := data.UnmarshalKey("pv_p_rank_reward", &h.pvPRankReward); err != nil {
		panic(errors.New("parse table PvPRankReward err:\n" + err.Error()))
	}
	for i, el := range h.pvPRankReward {
		h.pvPRankRewardMap[el.Id] = i
	}
}

func (i *PvPRankReward) Len() int {
	return len(h.pvPRankReward)
}

func (i *PvPRankReward) List() []PvPRankReward {
	return h.pvPRankReward
}

func (i *PvPRankReward) GetPvPRankRewardById(id values.Integer) (*PvPRankReward, bool) {
	index, ok := h.pvPRankRewardMap[id]
	if !ok {
		return nil, false
	}
	return &h.pvPRankReward[index], true
}
