// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type NpcChallengeDungeon struct {
	Id                   values.Integer                    `mapstructure:"id" json:"id"`
	MapScene             values.Integer                    `mapstructure:"map_scene" json:"map_scene"`
	Bt                   string                            `mapstructure:"bt" json:"bt"`
	MonsterGroupInfo     map[values.Integer]values.Integer `mapstructure:"monster_group_info" json:"monster_group_info"`
	Duration             values.Integer                    `mapstructure:"duration" json:"duration"`
	NameId               string                            `mapstructure:"name_id" json:"name_id"`
	MonsterPower         values.Integer                    `mapstructure:"monster_power" json:"monster_power"`
	MonsterPowerShowType values.Integer                    `mapstructure:"monster_power_show_type" json:"monster_power_show_type"`
	Monster              values.Integer                    `mapstructure:"monster" json:"monster"`
}

// parse func
func ParseNpcChallengeDungeon(data *Data) {
	if err := data.UnmarshalKey("npc_challenge_dungeon", &h.npcChallengeDungeon); err != nil {
		panic(errors.New("parse table NpcChallengeDungeon err:\n" + err.Error()))
	}
	for i, el := range h.npcChallengeDungeon {
		h.npcChallengeDungeonMap[el.Id] = i
	}
}

func (i *NpcChallengeDungeon) Len() int {
	return len(h.npcChallengeDungeon)
}

func (i *NpcChallengeDungeon) List() []NpcChallengeDungeon {
	return h.npcChallengeDungeon
}

func (i *NpcChallengeDungeon) GetNpcChallengeDungeonById(id values.Integer) (*NpcChallengeDungeon, bool) {
	index, ok := h.npcChallengeDungeonMap[id]
	if !ok {
		return nil, false
	}
	return &h.npcChallengeDungeon[index], true
}
