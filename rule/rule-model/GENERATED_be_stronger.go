// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type BeStronger struct {
	Id          values.Integer `mapstructure:"id" json:"id"`
	Text        string         `mapstructure:"text" json:"text"`
	ShowWhether values.Integer `mapstructure:"show_whether" json:"show_whether"`
	PanelName   string         `mapstructure:"panel_name" json:"panel_name"`
}

// parse func
func ParseBeStronger(data *Data) {
	if err := data.UnmarshalKey("be_stronger", &h.beStronger); err != nil {
		panic(errors.New("parse table BeStronger err:\n" + err.Error()))
	}
	for i, el := range h.beStronger {
		h.beStrongerMap[el.Id] = i
	}
}

func (i *BeStronger) Len() int {
	return len(h.beStronger)
}

func (i *BeStronger) List() []BeStronger {
	return h.beStronger
}

func (i *BeStronger) GetBeStrongerById(id values.Integer) (*BeStronger, bool) {
	index, ok := h.beStrongerMap[id]
	if !ok {
		return nil, false
	}
	return &h.beStronger[index], true
}
