// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type MonsterGroup struct {
	Id        values.Integer   `mapstructure:"id" json:"id"`
	MonsterId []values.Integer `mapstructure:"monster_id" json:"monster_id"`
	AreaId    values.Integer   `mapstructure:"area_id" json:"area_id"`
}

// parse func
func ParseMonsterGroup(data *Data) {
	if err := data.UnmarshalKey("monster_group", &h.monsterGroup); err != nil {
		panic(errors.New("parse table MonsterGroup err:\n" + err.Error()))
	}
	for i, el := range h.monsterGroup {
		h.monsterGroupMap[el.Id] = i
	}
}

func (i *MonsterGroup) Len() int {
	return len(h.monsterGroup)
}

func (i *MonsterGroup) List() []MonsterGroup {
	return h.monsterGroup
}

func (i *MonsterGroup) GetMonsterGroupById(id values.Integer) (*MonsterGroup, bool) {
	index, ok := h.monsterGroupMap[id]
	if !ok {
		return nil, false
	}
	return &h.monsterGroup[index], true
}
