// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type TaskType struct {
	Id           values.Integer `mapstructure:"id" json:"id"`
	LiteDesc     string         `mapstructure:"lite_desc" json:"lite_desc"`
	GoToSys      values.Integer `mapstructure:"go_to_sys" json:"go_to_sys"`
	IsAccumulate bool           `mapstructure:"is_accumulate" json:"is_accumulate"`
	IsReversed   bool           `mapstructure:"is_reversed" json:"is_reversed"`
	Param        string         `mapstructure:"param" json:"param"`
	NotReachTips values.Integer `mapstructure:"not_reach_tips" json:"not_reach_tips"`
}

// parse func
func ParseTaskType(data *Data) {
	if err := data.UnmarshalKey("task_type", &h.taskType); err != nil {
		panic(errors.New("parse table TaskType err:\n" + err.Error()))
	}
	for i, el := range h.taskType {
		h.taskTypeMap[el.Id] = i
	}
}

func (i *TaskType) Len() int {
	return len(h.taskType)
}

func (i *TaskType) List() []TaskType {
	return h.taskType
}

func (i *TaskType) GetTaskTypeById(id values.Integer) (*TaskType, bool) {
	index, ok := h.taskTypeMap[id]
	if !ok {
		return nil, false
	}
	return &h.taskType[index], true
}
