// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type ExpSkip struct {
	Id       values.Integer `mapstructure:"id" json:"id"`
	Duration values.Integer `mapstructure:"duration" json:"duration"`
}

// parse func
func ParseExpSkip(data *Data) {
	if err := data.UnmarshalKey("exp_skip", &h.expSkip); err != nil {
		panic(errors.New("parse table ExpSkip err:\n" + err.Error()))
	}
	for i, el := range h.expSkip {
		h.expSkipMap[el.Id] = i
	}
}

func (i *ExpSkip) Len() int {
	return len(h.expSkip)
}

func (i *ExpSkip) List() []ExpSkip {
	return h.expSkip
}

func (i *ExpSkip) GetExpSkipById(id values.Integer) (*ExpSkip, bool) {
	index, ok := h.expSkipMap[id]
	if !ok {
		return nil, false
	}
	return &h.expSkip[index], true
}
