// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Expedition struct {
	Id             values.Integer                    `mapstructure:"id" json:"id"`
	Name           string                            `mapstructure:"name" json:"name"`
	Typ            values.Integer                    `mapstructure:"typ" json:"typ"`
	Quality        values.Integer                    `mapstructure:"quality" json:"quality"`
	AcceptCondtion []values.Integer                  `mapstructure:"accept_condtion" json:"accept_condtion"`
	Cost           map[values.Integer]values.Integer `mapstructure:"cost" json:"cost"`
	Duration       values.Integer                    `mapstructure:"duration" json:"duration"`
	LimitCondition []values.Integer                  `mapstructure:"limit_condition" json:"limit_condition"`
}

// parse func
func ParseExpedition(data *Data) {
	if err := data.UnmarshalKey("expedition", &h.expedition); err != nil {
		panic(errors.New("parse table Expedition err:\n" + err.Error()))
	}
	for i, el := range h.expedition {
		h.expeditionMap[el.Id] = i
	}
}

func (i *Expedition) Len() int {
	return len(h.expedition)
}

func (i *Expedition) List() []Expedition {
	return h.expedition
}

func (i *Expedition) GetExpeditionById(id values.Integer) (*Expedition, bool) {
	index, ok := h.expeditionMap[id]
	if !ok {
		return nil, false
	}
	return &h.expedition[index], true
}
