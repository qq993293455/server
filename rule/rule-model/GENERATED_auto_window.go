// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type AutoWindow struct {
	Id                values.Integer `mapstructure:"id" json:"id"`
	SystemId          values.Integer `mapstructure:"system_id" json:"system_id"`
	AutoWindowsSwitch values.Integer `mapstructure:"auto_windows_switch" json:"auto_windows_switch"`
	LoginWindowsType  values.Integer `mapstructure:"login_windows_type" json:"login_windows_type"`
	WeightsValue      values.Integer `mapstructure:"weights_value" json:"weights_value"`
}

// parse func
func ParseAutoWindow(data *Data) {
	if err := data.UnmarshalKey("auto_window", &h.autoWindow); err != nil {
		panic(errors.New("parse table AutoWindow err:\n" + err.Error()))
	}
	for i, el := range h.autoWindow {
		h.autoWindowMap[el.Id] = i
	}
}

func (i *AutoWindow) Len() int {
	return len(h.autoWindow)
}

func (i *AutoWindow) List() []AutoWindow {
	return h.autoWindow
}

func (i *AutoWindow) GetAutoWindowById(id values.Integer) (*AutoWindow, bool) {
	index, ok := h.autoWindowMap[id]
	if !ok {
		return nil, false
	}
	return &h.autoWindow[index], true
}
