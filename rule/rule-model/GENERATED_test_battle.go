// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type TestBattle struct {
	Id               values.Integer                    `mapstructure:"id" json:"id"`
	MapSceneId       values.Integer                    `mapstructure:"map_scene_id" json:"map_scene_id"`
	MonsterGroupInfo map[values.Integer]values.Integer `mapstructure:"monster_group_info" json:"monster_group_info"`
	BehaviorTree     string                            `mapstructure:"behavior_tree" json:"behavior_tree"`
	Duration         values.Integer                    `mapstructure:"duration" json:"duration"`
}

// parse func
func ParseTestBattle(data *Data) {
	if err := data.UnmarshalKey("test_battle", &h.testBattle); err != nil {
		panic(errors.New("parse table TestBattle err:\n" + err.Error()))
	}
	for i, el := range h.testBattle {
		h.testBattleMap[el.Id] = i
	}
}

func (i *TestBattle) Len() int {
	return len(h.testBattle)
}

func (i *TestBattle) List() []TestBattle {
	return h.testBattle
}

func (i *TestBattle) GetTestBattleById(id values.Integer) (*TestBattle, bool) {
	index, ok := h.testBattleMap[id]
	if !ok {
		return nil, false
	}
	return &h.testBattle[index], true
}
