// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type ActivityFirstpay struct {
	Id             values.Integer   `mapstructure:"id" json:"id"`
	TypId          values.Integer   `mapstructure:"typ_id" json:"typ_id"`
	ItemPictureId  string           `mapstructure:"item_picture_id" json:"item_picture_id"`
	SpecialFieldId string           `mapstructure:"special_field_id" json:"special_field_id"`
	Day            values.Integer   `mapstructure:"day" json:"day"`
	ActivityReward []values.Integer `mapstructure:"activity_reward" json:"activity_reward"`
}

// parse func
func ParseActivityFirstpay(data *Data) {
	if err := data.UnmarshalKey("activity_firstpay", &h.activityFirstpay); err != nil {
		panic(errors.New("parse table ActivityFirstpay err:\n" + err.Error()))
	}
	for i, el := range h.activityFirstpay {
		h.activityFirstpayMap[el.Id] = i
	}
}

func (i *ActivityFirstpay) Len() int {
	return len(h.activityFirstpay)
}

func (i *ActivityFirstpay) List() []ActivityFirstpay {
	return h.activityFirstpay
}

func (i *ActivityFirstpay) GetActivityFirstpayById(id values.Integer) (*ActivityFirstpay, bool) {
	index, ok := h.activityFirstpayMap[id]
	if !ok {
		return nil, false
	}
	return &h.activityFirstpay[index], true
}
