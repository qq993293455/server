// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type SystemUnlockCondition struct {
	Id            values.Integer `mapstructure:"id" json:"id"`
	Name          string         `mapstructure:"name" json:"name"`
	ConditionType values.Integer `mapstructure:"condition_type" json:"condition_type"`
}

// parse func
func ParseSystemUnlockCondition(data *Data) {
	if err := data.UnmarshalKey("system_unlock_condition", &h.systemUnlockCondition); err != nil {
		panic(errors.New("parse table SystemUnlockCondition err:\n" + err.Error()))
	}
	for i, el := range h.systemUnlockCondition {
		h.systemUnlockConditionMap[el.Id] = i
	}
}

func (i *SystemUnlockCondition) Len() int {
	return len(h.systemUnlockCondition)
}

func (i *SystemUnlockCondition) List() []SystemUnlockCondition {
	return h.systemUnlockCondition
}

func (i *SystemUnlockCondition) GetSystemUnlockConditionById(id values.Integer) (*SystemUnlockCondition, bool) {
	index, ok := h.systemUnlockConditionMap[id]
	if !ok {
		return nil, false
	}
	return &h.systemUnlockCondition[index], true
}
