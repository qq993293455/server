// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type RobotName struct {
	Id         values.Integer `mapstructure:"id" json:"id"`
	FirstName  string         `mapstructure:"first_name" json:"first_name"`
	SecondName string         `mapstructure:"second_name" json:"second_name"`
}

// parse func
func ParseRobotName(data *Data) {
	if err := data.UnmarshalKey("robot_name", &h.robotName); err != nil {
		panic(errors.New("parse table RobotName err:\n" + err.Error()))
	}
	for i, el := range h.robotName {
		h.robotNameMap[el.Id] = i
	}
}

func (i *RobotName) Len() int {
	return len(h.robotName)
}

func (i *RobotName) List() []RobotName {
	return h.robotName
}

func (i *RobotName) GetRobotNameById(id values.Integer) (*RobotName, bool) {
	index, ok := h.robotNameMap[id]
	if !ok {
		return nil, false
	}
	return &h.robotName[index], true
}
