// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Announcement struct {
	Id         values.Integer   `mapstructure:"id" json:"id"`
	Language1  string           `mapstructure:"language1" json:"language1"`
	Language2  string           `mapstructure:"language2" json:"language2"`
	Reward     []values.Integer `mapstructure:"reward" json:"reward"`
	Expiration values.Integer   `mapstructure:"expiration" json:"expiration"`
}

// parse func
func ParseAnnouncement(data *Data) {
	if err := data.UnmarshalKey("announcement", &h.announcement); err != nil {
		panic(errors.New("parse table Announcement err:\n" + err.Error()))
	}
	for i, el := range h.announcement {
		h.announcementMap[el.Id] = i
	}
}

func (i *Announcement) Len() int {
	return len(h.announcement)
}

func (i *Announcement) List() []Announcement {
	return h.announcement
}

func (i *Announcement) GetAnnouncementById(id values.Integer) (*Announcement, bool) {
	index, ok := h.announcementMap[id]
	if !ok {
		return nil, false
	}
	return &h.announcement[index], true
}
