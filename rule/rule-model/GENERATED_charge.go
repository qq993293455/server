// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Charge struct {
	Id           values.Integer `mapstructure:"id" json:"id"`
	ChargeNum    values.Integer `mapstructure:"charge_num" json:"charge_num"`
	FunctionType values.Integer `mapstructure:"function_type" json:"function_type"`
	TargetId     values.Integer `mapstructure:"target_id" json:"target_id"`
	Normal       bool           `mapstructure:"normal" json:"normal"`
}

// parse func
func ParseCharge(data *Data) {
	if err := data.UnmarshalKey("charge", &h.charge); err != nil {
		panic(errors.New("parse table Charge err:\n" + err.Error()))
	}
	for i, el := range h.charge {
		h.chargeMap[el.Id] = i
	}
}

func (i *Charge) Len() int {
	return len(h.charge)
}

func (i *Charge) List() []Charge {
	return h.charge
}

func (i *Charge) GetChargeById(id values.Integer) (*Charge, bool) {
	index, ok := h.chargeMap[id]
	if !ok {
		return nil, false
	}
	return &h.charge[index], true
}
