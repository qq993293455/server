// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type PersonalBossHelperCards struct {
	Id                         values.Integer `mapstructure:"id" json:"id"`
	ItemName                   string         `mapstructure:"item_name" json:"item_name"`
	ItemIcon                   string         `mapstructure:"item_icon" json:"item_icon"`
	ItemIconScaling            values.Integer `mapstructure:"item_icon_scaling" json:"item_icon_scaling"`
	CardQuality                values.Integer `mapstructure:"card_quality" json:"card_quality"`
	CardBuffId                 values.Integer `mapstructure:"card_buff_id" json:"card_buff_id"`
	CardEffectBriefDescription values.Integer `mapstructure:"card_effect_brief_description" json:"card_effect_brief_description"`
	CardConsumption            values.Integer `mapstructure:"card_consumption" json:"card_consumption"`
}

// parse func
func ParsePersonalBossHelperCards(data *Data) {
	if err := data.UnmarshalKey("personal_boss_helper_cards", &h.personalBossHelperCards); err != nil {
		panic(errors.New("parse table PersonalBossHelperCards err:\n" + err.Error()))
	}
	for i, el := range h.personalBossHelperCards {
		h.personalBossHelperCardsMap[el.Id] = i
	}
}

func (i *PersonalBossHelperCards) Len() int {
	return len(h.personalBossHelperCards)
}

func (i *PersonalBossHelperCards) List() []PersonalBossHelperCards {
	return h.personalBossHelperCards
}

func (i *PersonalBossHelperCards) GetPersonalBossHelperCardsById(id values.Integer) (*PersonalBossHelperCards, bool) {
	index, ok := h.personalBossHelperCardsMap[id]
	if !ok {
		return nil, false
	}
	return &h.personalBossHelperCards[index], true
}
