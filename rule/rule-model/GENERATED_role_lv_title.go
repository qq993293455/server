// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type RoleLvTitle struct {
	Id           values.Integer                    `mapstructure:"id" json:"id"`
	AdvancedHero values.Integer                    `mapstructure:"advanced_hero" json:"advanced_hero"`
	Icon         string                            `mapstructure:"icon" json:"icon"`
	Icon2        string                            `mapstructure:"icon2" json:"icon2"`
	NameId       string                            `mapstructure:"name_id" json:"name_id"`
	TitleReward  map[values.Integer]values.Integer `mapstructure:"title_reward" json:"title_reward"`
	TitleSkill   map[values.Integer]values.Integer `mapstructure:"title_skill" json:"title_skill"`
	CombatBattle map[values.Integer]values.Integer `mapstructure:"combat_battle" json:"combat_battle"`
	LevelReached []values.Integer                  `mapstructure:"level_reached" json:"level_reached"`
}

// parse func
func ParseRoleLvTitle(data *Data) {
	if err := data.UnmarshalKey("role_lv_title", &h.roleLvTitle); err != nil {
		panic(errors.New("parse table RoleLvTitle err:\n" + err.Error()))
	}
	for i, el := range h.roleLvTitle {
		h.roleLvTitleMap[el.Id] = i
	}
}

func (i *RoleLvTitle) Len() int {
	return len(h.roleLvTitle)
}

func (i *RoleLvTitle) List() []RoleLvTitle {
	return h.roleLvTitle
}

func (i *RoleLvTitle) GetRoleLvTitleById(id values.Integer) (*RoleLvTitle, bool) {
	index, ok := h.roleLvTitleMap[id]
	if !ok {
		return nil, false
	}
	return &h.roleLvTitle[index], true
}
