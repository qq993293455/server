// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type MonsterAttr struct {
	Id                      values.Integer                    `mapstructure:"id" json:"id"`
	PlayMonsterType         values.Integer                    `mapstructure:"play_monster_type" json:"play_monster_type"`
	MonsterType             values.Integer                    `mapstructure:"monster_type" json:"monster_type"`
	MonsterPropertiesType   values.Integer                    `mapstructure:"monster_properties_type" json:"monster_properties_type"`
	MonsterLv               values.Integer                    `mapstructure:"monster_lv" json:"monster_lv"`
	ParameterQuality        map[values.Integer]values.Integer `mapstructure:"parameter_quality" json:"parameter_quality"`
	MonsterBattlePowerValue values.Integer                    `mapstructure:"monster_battle_power_value" json:"monster_battle_power_value"`
}

// parse func
func ParseMonsterAttr(data *Data) {
	if err := data.UnmarshalKey("monster_attr", &h.monsterAttr); err != nil {
		panic(errors.New("parse table MonsterAttr err:\n" + err.Error()))
	}
	for i, el := range h.monsterAttr {
		h.monsterAttrMap[el.Id] = i
	}
}

func (i *MonsterAttr) Len() int {
	return len(h.monsterAttr)
}

func (i *MonsterAttr) List() []MonsterAttr {
	return h.monsterAttr
}

func (i *MonsterAttr) GetMonsterAttrById(id values.Integer) (*MonsterAttr, bool) {
	index, ok := h.monsterAttrMap[id]
	if !ok {
		return nil, false
	}
	return &h.monsterAttr[index], true
}
