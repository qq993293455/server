// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Divination struct {
	Id          values.Integer                    `mapstructure:"id" json:"id"`
	ItemId      map[values.Integer]values.Integer `mapstructure:"item_id" json:"item_id"`
	ItemWeight  values.Integer                    `mapstructure:"item_weight" json:"item_weight"`
	Coefficient values.Integer                    `mapstructure:"coefficient" json:"coefficient"`
}

// parse func
func ParseDivination(data *Data) {
	if err := data.UnmarshalKey("divination", &h.divination); err != nil {
		panic(errors.New("parse table Divination err:\n" + err.Error()))
	}
	for i, el := range h.divination {
		h.divinationMap[el.Id] = i
	}
}

func (i *Divination) Len() int {
	return len(h.divination)
}

func (i *Divination) List() []Divination {
	return h.divination
}

func (i *Divination) GetDivinationById(id values.Integer) (*Divination, bool) {
	index, ok := h.divinationMap[id]
	if !ok {
		return nil, false
	}
	return &h.divination[index], true
}
