// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type ActivityXdaygoalScorereward struct {
	Id         values.Integer   `mapstructure:"id" json:"id"`
	ActivityId values.Integer   `mapstructure:"activity_id" json:"activity_id"`
	Points     values.Integer   `mapstructure:"points" json:"points"`
	Reward     []values.Integer `mapstructure:"reward" json:"reward"`
}

// parse func
func ParseActivityXdaygoalScorereward(data *Data) {
	if err := data.UnmarshalKey("activity__xdaygoal_scorereward", &h.activityXdaygoalScorereward); err != nil {
		panic(errors.New("parse table ActivityXdaygoalScorereward err:\n" + err.Error()))
	}
	for i, el := range h.activityXdaygoalScorereward {
		h.activityXdaygoalScorerewardMap[el.Id] = i
	}
}

func (i *ActivityXdaygoalScorereward) Len() int {
	return len(h.activityXdaygoalScorereward)
}

func (i *ActivityXdaygoalScorereward) List() []ActivityXdaygoalScorereward {
	return h.activityXdaygoalScorereward
}

func (i *ActivityXdaygoalScorereward) GetActivityXdaygoalScorerewardById(id values.Integer) (*ActivityXdaygoalScorereward, bool) {
	index, ok := h.activityXdaygoalScorerewardMap[id]
	if !ok {
		return nil, false
	}
	return &h.activityXdaygoalScorereward[index], true
}
