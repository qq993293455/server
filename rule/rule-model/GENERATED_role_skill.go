// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type RoleSkill struct {
	Id                    values.Integer   `mapstructure:"id" json:"id"`
	RoleId                values.Integer   `mapstructure:"role_id" json:"role_id"`
	SkillHoleId           []values.Integer `mapstructure:"skill_hole_id" json:"skill_hole_id"`
	SkillHoleUnlockRoleLv []values.Integer `mapstructure:"skill_hole_unlock_role_lv" json:"skill_hole_unlock_role_lv"`
	LevelLimit            values.Integer   `mapstructure:"level_limit" json:"level_limit"`
}

// parse func
func ParseRoleSkill(data *Data) {
	if err := data.UnmarshalKey("role_skill", &h.roleSkill); err != nil {
		panic(errors.New("parse table RoleSkill err:\n" + err.Error()))
	}
	for i, el := range h.roleSkill {
		h.roleSkillMap[el.Id] = i
	}
}

func (i *RoleSkill) Len() int {
	return len(h.roleSkill)
}

func (i *RoleSkill) List() []RoleSkill {
	return h.roleSkill
}

func (i *RoleSkill) GetRoleSkillById(id values.Integer) (*RoleSkill, bool) {
	index, ok := h.roleSkillMap[id]
	if !ok {
		return nil, false
	}
	return &h.roleSkill[index], true
}
