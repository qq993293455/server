// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type AnecdotesGame8Option struct {
	AnecdotesGame8Id values.Integer                    `mapstructure:"anecdotes_game8_id" json:"anecdotes_game8_id"`
	Id               values.Integer                    `mapstructure:"id" json:"id"`
	PowerType        values.Integer                    `mapstructure:"power_type" json:"power_type"`
	Reward           map[values.Integer]values.Integer `mapstructure:"reward" json:"reward"`
	DropListId       values.Integer                    `mapstructure:"drop_list_id" json:"drop_list_id"`
	FailReward       map[values.Integer]values.Integer `mapstructure:"fail_reward" json:"fail_reward"`
	HolenNum         values.Integer                    `mapstructure:"holen_num" json:"holen_num"`
	WinTarget        map[values.Integer]values.Integer `mapstructure:"win_target" json:"win_target"`
	SpeedBall        []values.Integer                  `mapstructure:"speed_ball" json:"speed_ball"`
	NicePro          values.Integer                    `mapstructure:"nice_pro" json:"nice_pro"`
	PerfectPro       values.Integer                    `mapstructure:"perfect_pro" json:"perfect_pro"`
	TimeBall         []values.Integer                  `mapstructure:"time_ball" json:"time_ball"`
}

// parse func
func ParseAnecdotesGame8Option(data *Data) {
	if err := data.UnmarshalKey("anecdotes_game8_option", &h.anecdotesGame8Option); err != nil {
		panic(errors.New("parse table AnecdotesGame8Option err:\n" + err.Error()))
	}
	for i, el := range h.anecdotesGame8Option {
		if _, ok := h.anecdotesGame8OptionMap[el.AnecdotesGame8Id]; !ok {
			h.anecdotesGame8OptionMap[el.AnecdotesGame8Id] = map[values.Integer]int{el.Id: i}
		} else {
			h.anecdotesGame8OptionMap[el.AnecdotesGame8Id][el.Id] = i
		}
	}
}

func (i *AnecdotesGame8Option) Len() int {
	return len(h.anecdotesGame8Option)
}

func (i *AnecdotesGame8Option) List() []AnecdotesGame8Option {
	return h.anecdotesGame8Option
}

func (i *AnecdotesGame8Option) GetAnecdotesGame8OptionById(parentId, id values.Integer) (*AnecdotesGame8Option, bool) {
	item, ok := h.anecdotesGame8OptionMap[parentId]
	if !ok {
		return nil, false
	}
	index, ok := item[id]
	if !ok {
		return nil, false
	}
	return &h.anecdotesGame8Option[index], true
}
