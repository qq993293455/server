// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type OptionalBox struct {
	Id   values.Integer   `mapstructure:"id" json:"id"`
	Typ  values.Integer   `mapstructure:"typ" json:"typ"`
	Item []values.Integer `mapstructure:"item" json:"item"`
	Num  []values.Integer `mapstructure:"num" json:"num"`
	Pro  []values.Integer `mapstructure:"pro" json:"pro"`
}

// parse func
func ParseOptionalBox(data *Data) {
	if err := data.UnmarshalKey("optional_box", &h.optionalBox); err != nil {
		panic(errors.New("parse table OptionalBox err:\n" + err.Error()))
	}
	for i, el := range h.optionalBox {
		h.optionalBoxMap[el.Id] = i
	}
}

func (i *OptionalBox) Len() int {
	return len(h.optionalBox)
}

func (i *OptionalBox) List() []OptionalBox {
	return h.optionalBox
}

func (i *OptionalBox) GetOptionalBoxById(id values.Integer) (*OptionalBox, bool) {
	index, ok := h.optionalBoxMap[id]
	if !ok {
		return nil, false
	}
	return &h.optionalBox[index], true
}
