// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type AnecdotesGame11 struct {
	Id            values.Integer     `mapstructure:"id" json:"id"`
	Name          string             `mapstructure:"name" json:"name"`
	GameTime      values.Integer     `mapstructure:"game_time" json:"game_time"`
	ChestImg      string             `mapstructure:"chest_img" json:"chest_img"`
	HolenNum      values.Integer     `mapstructure:"holen_num" json:"holen_num"`
	Position      [][]values.Integer `mapstructure:"position" json:"position"`
	SpeedBall     []values.Integer   `mapstructure:"speed_ball" json:"speed_ball"`
	SpeedBallLast []values.Integer   `mapstructure:"speed_ball_last" json:"speed_ball_last"`
	Spacing       values.Integer     `mapstructure:"spacing" json:"spacing"`
}

// parse func
func ParseAnecdotesGame11(data *Data) {
	if err := data.UnmarshalKey("anecdotes_game1_1", &h.anecdotesGame11); err != nil {
		panic(errors.New("parse table AnecdotesGame11 err:\n" + err.Error()))
	}
	for i, el := range h.anecdotesGame11 {
		h.anecdotesGame11Map[el.Id] = i
	}
}

func (i *AnecdotesGame11) Len() int {
	return len(h.anecdotesGame11)
}

func (i *AnecdotesGame11) List() []AnecdotesGame11 {
	return h.anecdotesGame11
}

func (i *AnecdotesGame11) GetAnecdotesGame11ById(id values.Integer) (*AnecdotesGame11, bool) {
	index, ok := h.anecdotesGame11Map[id]
	if !ok {
		return nil, false
	}
	return &h.anecdotesGame11[index], true
}
