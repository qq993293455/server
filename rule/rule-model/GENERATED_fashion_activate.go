// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type FashionActivate struct {
	Id           values.Integer                    `mapstructure:"id" json:"id"`
	FashionId    values.Integer                    `mapstructure:"fashion_id" json:"fashion_id"`
	Duration     values.Integer                    `mapstructure:"duration" json:"duration"`
	TransferItem map[values.Integer]values.Integer `mapstructure:"transfer_item" json:"transfer_item"`
}

// parse func
func ParseFashionActivate(data *Data) {
	if err := data.UnmarshalKey("fashion_activate", &h.fashionActivate); err != nil {
		panic(errors.New("parse table FashionActivate err:\n" + err.Error()))
	}
	for i, el := range h.fashionActivate {
		h.fashionActivateMap[el.Id] = i
	}
}

func (i *FashionActivate) Len() int {
	return len(h.fashionActivate)
}

func (i *FashionActivate) List() []FashionActivate {
	return h.fashionActivate
}

func (i *FashionActivate) GetFashionActivateById(id values.Integer) (*FashionActivate, bool) {
	index, ok := h.fashionActivateMap[id]
	if !ok {
		return nil, false
	}
	return &h.fashionActivate[index], true
}
