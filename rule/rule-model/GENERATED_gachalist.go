// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Gachalist struct {
	GachaId       values.Integer   `mapstructure:"gacha_id" json:"gacha_id"`
	Id            values.Integer   `mapstructure:"id" json:"id"`
	Typename      values.Integer   `mapstructure:"typename" json:"typename"`
	GachaMultiple values.Integer   `mapstructure:"gacha_multiple" json:"gacha_multiple"`
	Itemshow      []values.Integer `mapstructure:"itemshow" json:"itemshow"`
}

// parse func
func ParseGachalist(data *Data) {
	if err := data.UnmarshalKey("gachalist", &h.gachalist); err != nil {
		panic(errors.New("parse table Gachalist err:\n" + err.Error()))
	}
	for i, el := range h.gachalist {
		if _, ok := h.gachalistMap[el.GachaId]; !ok {
			h.gachalistMap[el.GachaId] = map[values.Integer]int{el.Id: i}
		} else {
			h.gachalistMap[el.GachaId][el.Id] = i
		}
	}
}

func (i *Gachalist) Len() int {
	return len(h.gachalist)
}

func (i *Gachalist) List() []Gachalist {
	return h.gachalist
}

func (i *Gachalist) GetGachalistById(parentId, id values.Integer) (*Gachalist, bool) {
	item, ok := h.gachalistMap[parentId]
	if !ok {
		return nil, false
	}
	index, ok := item[id]
	if !ok {
		return nil, false
	}
	return &h.gachalist[index], true
}
