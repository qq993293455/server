// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type StoryIllustration struct {
	Id             values.Integer   `mapstructure:"id" json:"id"`
	Img            string           `mapstructure:"img" json:"img"`
	AtlasImg       string           `mapstructure:"atlas_img" json:"atlas_img"`
	Title          string           `mapstructure:"title" json:"title"`
	TitleLanguage  values.Integer   `mapstructure:"title_language" json:"title_language"`
	Typ            values.Integer   `mapstructure:"typ" json:"typ"`
	Story          string           `mapstructure:"story" json:"story"`
	StoryId        values.Integer   `mapstructure:"story_id" json:"story_id"`
	UlockCondition []values.Integer `mapstructure:"ulock_condition" json:"ulock_condition"`
}

// parse func
func ParseStoryIllustration(data *Data) {
	if err := data.UnmarshalKey("story_illustration", &h.storyIllustration); err != nil {
		panic(errors.New("parse table StoryIllustration err:\n" + err.Error()))
	}
	for i, el := range h.storyIllustration {
		h.storyIllustrationMap[el.Id] = i
	}
}

func (i *StoryIllustration) Len() int {
	return len(h.storyIllustration)
}

func (i *StoryIllustration) List() []StoryIllustration {
	return h.storyIllustration
}

func (i *StoryIllustration) GetStoryIllustrationById(id values.Integer) (*StoryIllustration, bool) {
	index, ok := h.storyIllustrationMap[id]
	if !ok {
		return nil, false
	}
	return &h.storyIllustration[index], true
}
