// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Biography struct {
	Id              values.Integer                    `mapstructure:"id" json:"id"`
	HeroId          values.Integer                    `mapstructure:"hero_id" json:"hero_id"`
	Order           values.Integer                    `mapstructure:"order" json:"order"`
	UnlockCondition []values.Integer                  `mapstructure:"unlock_condition" json:"unlock_condition"`
	Title           string                            `mapstructure:"title" json:"title"`
	Text            string                            `mapstructure:"text" json:"text"`
	Reward          map[values.Integer]values.Integer `mapstructure:"reward" json:"reward"`
}

// parse func
func ParseBiography(data *Data) {
	if err := data.UnmarshalKey("biography", &h.biography); err != nil {
		panic(errors.New("parse table Biography err:\n" + err.Error()))
	}
	for i, el := range h.biography {
		h.biographyMap[el.Id] = i
	}
}

func (i *Biography) Len() int {
	return len(h.biography)
}

func (i *Biography) List() []Biography {
	return h.biography
}

func (i *Biography) GetBiographyById(id values.Integer) (*Biography, bool) {
	index, ok := h.biographyMap[id]
	if !ok {
		return nil, false
	}
	return &h.biography[index], true
}
