// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type LanguageBackend struct {
	Id values.Integer `mapstructure:"id" json:"id"`
	Cn string         `mapstructure:"cn" json:"cn"`
	Hk string         `mapstructure:"hk" json:"hk"`
	En string         `mapstructure:"en" json:"en"`
}

// parse func
func ParseLanguageBackend(data *Data) {
	if err := data.UnmarshalKey("language_backend", &h.languageBackend); err != nil {
		panic(errors.New("parse table LanguageBackend err:\n" + err.Error()))
	}
	for i, el := range h.languageBackend {
		h.languageBackendMap[el.Id] = i
	}
}

func (i *LanguageBackend) Len() int {
	return len(h.languageBackend)
}

func (i *LanguageBackend) List() []LanguageBackend {
	return h.languageBackend
}

func (i *LanguageBackend) GetLanguageBackendById(id values.Integer) (*LanguageBackend, bool) {
	index, ok := h.languageBackendMap[id]
	if !ok {
		return nil, false
	}
	return &h.languageBackend[index], true
}
