// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type ExpeditionQuantity struct {
	Id             values.Integer   `mapstructure:"id" json:"id"`
	UnlockCondtion []values.Integer `mapstructure:"unlock_condtion" json:"unlock_condtion"`
}

// parse func
func ParseExpeditionQuantity(data *Data) {
	if err := data.UnmarshalKey("expedition_quantity", &h.expeditionQuantity); err != nil {
		panic(errors.New("parse table ExpeditionQuantity err:\n" + err.Error()))
	}
	for i, el := range h.expeditionQuantity {
		h.expeditionQuantityMap[el.Id] = i
	}
}

func (i *ExpeditionQuantity) Len() int {
	return len(h.expeditionQuantity)
}

func (i *ExpeditionQuantity) List() []ExpeditionQuantity {
	return h.expeditionQuantity
}

func (i *ExpeditionQuantity) GetExpeditionQuantityById(id values.Integer) (*ExpeditionQuantity, bool) {
	index, ok := h.expeditionQuantityMap[id]
	if !ok {
		return nil, false
	}
	return &h.expeditionQuantity[index], true
}
