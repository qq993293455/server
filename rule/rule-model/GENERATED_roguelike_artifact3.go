// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type RoguelikeArtifact3 struct {
	Id        values.Integer `mapstructure:"id" json:"id"`
	ItemName  string         `mapstructure:"item_name" json:"item_name"`
	ItemIcon  string         `mapstructure:"item_icon" json:"item_icon"`
	QualityId values.Integer `mapstructure:"quality_id" json:"quality_id"`
	Quality   values.Integer `mapstructure:"quality" json:"quality"`
}

// parse func
func ParseRoguelikeArtifact3(data *Data) {
	if err := data.UnmarshalKey("roguelike_artifact3", &h.roguelikeArtifact3); err != nil {
		panic(errors.New("parse table RoguelikeArtifact3 err:\n" + err.Error()))
	}
	for i, el := range h.roguelikeArtifact3 {
		h.roguelikeArtifact3Map[el.Id] = i
	}
}

func (i *RoguelikeArtifact3) Len() int {
	return len(h.roguelikeArtifact3)
}

func (i *RoguelikeArtifact3) List() []RoguelikeArtifact3 {
	return h.roguelikeArtifact3
}

func (i *RoguelikeArtifact3) GetRoguelikeArtifact3ById(id values.Integer) (*RoguelikeArtifact3, bool) {
	index, ok := h.roguelikeArtifact3Map[id]
	if !ok {
		return nil, false
	}
	return &h.roguelikeArtifact3[index], true
}
