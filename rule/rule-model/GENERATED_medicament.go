// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Medicament struct {
	Id         values.Integer `mapstructure:"id" json:"id"`
	Level      values.Integer `mapstructure:"level" json:"level"`
	Typ        values.Integer `mapstructure:"typ" json:"typ"`
	SpecialUse bool           `mapstructure:"special_use" json:"special_use"`
	Cd         values.Integer `mapstructure:"cd" json:"cd"`
	BuffId     values.Integer `mapstructure:"buff_id" json:"buff_id"`
	Limit      values.Integer `mapstructure:"limit" json:"limit"`
}

// parse func
func ParseMedicament(data *Data) {
	if err := data.UnmarshalKey("medicament", &h.medicament); err != nil {
		panic(errors.New("parse table Medicament err:\n" + err.Error()))
	}
	for i, el := range h.medicament {
		h.medicamentMap[el.Id] = i
	}
}

func (i *Medicament) Len() int {
	return len(h.medicament)
}

func (i *Medicament) List() []Medicament {
	return h.medicament
}

func (i *Medicament) GetMedicamentById(id values.Integer) (*Medicament, bool) {
	index, ok := h.medicamentMap[id]
	if !ok {
		return nil, false
	}
	return &h.medicament[index], true
}
