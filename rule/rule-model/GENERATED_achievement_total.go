// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type AchievementTotal struct {
	Id                values.Integer `mapstructure:"id" json:"id"`
	IconName          string         `mapstructure:"icon_name" json:"icon_name"`
	TitleName         string         `mapstructure:"title_name" json:"title_name"`
	TitleNameLanguage values.Integer `mapstructure:"title_name_language" json:"title_name_language"`
	MaxNum            values.Integer `mapstructure:"max_num" json:"max_num"`
}

// parse func
func ParseAchievementTotal(data *Data) {
	if err := data.UnmarshalKey("achievement_total", &h.achievementTotal); err != nil {
		panic(errors.New("parse table AchievementTotal err:\n" + err.Error()))
	}
	for i, el := range h.achievementTotal {
		h.achievementTotalMap[el.Id] = i
	}
}

func (i *AchievementTotal) Len() int {
	return len(h.achievementTotal)
}

func (i *AchievementTotal) List() []AchievementTotal {
	return h.achievementTotal
}

func (i *AchievementTotal) GetAchievementTotalById(id values.Integer) (*AchievementTotal, bool) {
	index, ok := h.achievementTotalMap[id]
	if !ok {
		return nil, false
	}
	return &h.achievementTotal[index], true
}
