// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Flynum struct {
	Id            values.Integer `mapstructure:"id" json:"id"`
	FlyNumPosType values.Integer `mapstructure:"fly_num_pos_type" json:"fly_num_pos_type"`
	FlyNumSize    values.Integer `mapstructure:"fly_num_size" json:"fly_num_size"`
}

// parse func
func ParseFlynum(data *Data) {
	if err := data.UnmarshalKey("flynum", &h.flynum); err != nil {
		panic(errors.New("parse table Flynum err:\n" + err.Error()))
	}
	for i, el := range h.flynum {
		h.flynumMap[el.Id] = i
	}
}

func (i *Flynum) Len() int {
	return len(h.flynum)
}

func (i *Flynum) List() []Flynum {
	return h.flynum
}

func (i *Flynum) GetFlynumById(id values.Integer) (*Flynum, bool) {
	index, ok := h.flynumMap[id]
	if !ok {
		return nil, false
	}
	return &h.flynum[index], true
}
