// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type SensitiveDict2 struct {
	Id   values.Integer `mapstructure:"id" json:"id"`
	Word string         `mapstructure:"word" json:"word"`
}

// parse func
func ParseSensitiveDict2(data *Data) {
	if err := data.UnmarshalKey("sensitive_dict2", &h.sensitiveDict2); err != nil {
		panic(errors.New("parse table SensitiveDict2 err:\n" + err.Error()))
	}
	for i, el := range h.sensitiveDict2 {
		h.sensitiveDict2Map[el.Id] = i
	}
}

func (i *SensitiveDict2) Len() int {
	return len(h.sensitiveDict2)
}

func (i *SensitiveDict2) List() []SensitiveDict2 {
	return h.sensitiveDict2
}

func (i *SensitiveDict2) GetSensitiveDict2ById(id values.Integer) (*SensitiveDict2, bool) {
	index, ok := h.sensitiveDict2Map[id]
	if !ok {
		return nil, false
	}
	return &h.sensitiveDict2[index], true
}
