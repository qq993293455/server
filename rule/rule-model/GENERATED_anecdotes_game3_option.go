// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type AnecdotesGame3Option struct {
	AnecdotesGame3Id values.Integer                    `mapstructure:"anecdotes_game3_id" json:"anecdotes_game3_id"`
	Id               values.Integer                    `mapstructure:"id" json:"id"`
	PowerType        values.Integer                    `mapstructure:"power_type" json:"power_type"`
	Reward           map[values.Integer]values.Integer `mapstructure:"reward" json:"reward"`
	DropListId       values.Integer                    `mapstructure:"drop_list_id" json:"drop_list_id"`
	Purchase         map[values.Integer]values.Integer `mapstructure:"purchase" json:"purchase"`
	EquipReward      map[values.Integer]values.Integer `mapstructure:"equip_reward" json:"equip_reward"`
}

// parse func
func ParseAnecdotesGame3Option(data *Data) {
	if err := data.UnmarshalKey("anecdotes_game3_option", &h.anecdotesGame3Option); err != nil {
		panic(errors.New("parse table AnecdotesGame3Option err:\n" + err.Error()))
	}
	for i, el := range h.anecdotesGame3Option {
		if _, ok := h.anecdotesGame3OptionMap[el.AnecdotesGame3Id]; !ok {
			h.anecdotesGame3OptionMap[el.AnecdotesGame3Id] = map[values.Integer]int{el.Id: i}
		} else {
			h.anecdotesGame3OptionMap[el.AnecdotesGame3Id][el.Id] = i
		}
	}
}

func (i *AnecdotesGame3Option) Len() int {
	return len(h.anecdotesGame3Option)
}

func (i *AnecdotesGame3Option) List() []AnecdotesGame3Option {
	return h.anecdotesGame3Option
}

func (i *AnecdotesGame3Option) GetAnecdotesGame3OptionById(parentId, id values.Integer) (*AnecdotesGame3Option, bool) {
	item, ok := h.anecdotesGame3OptionMap[parentId]
	if !ok {
		return nil, false
	}
	index, ok := item[id]
	if !ok {
		return nil, false
	}
	return &h.anecdotesGame3Option[index], true
}
