// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type Equipment struct {
	Id             values.Integer   `mapstructure:"id" json:"id"`
	Name           string           `mapstructure:"name" json:"name"`
	Icon           string           `mapstructure:"icon" json:"icon"`
	Level          values.Integer   `mapstructure:"level" json:"level"`
	Quality        values.Integer   `mapstructure:"quality" json:"quality"`
	Typ            values.Integer   `mapstructure:"typ" json:"typ"`
	SkillId        values.Integer   `mapstructure:"skill_id" json:"skill_id"`
	AttributeId    []values.Integer `mapstructure:"attribute_id" json:"attribute_id"`
	AttributeValue []values.Integer `mapstructure:"attribute_value" json:"attribute_value"`
	Price          values.Integer   `mapstructure:"price" json:"price"`
}

// parse func
func ParseEquipment(data *Data) {
	if err := data.UnmarshalKey("equipment", &h.equipment); err != nil {
		panic(errors.New("parse table Equipment err:\n" + err.Error()))
	}
	for i, el := range h.equipment {
		h.equipmentMap[el.Id] = i
	}
}

func (i *Equipment) Len() int {
	return len(h.equipment)
}

func (i *Equipment) List() []Equipment {
	return h.equipment
}

func (i *Equipment) GetEquipmentById(id values.Integer) (*Equipment, bool) {
	index, ok := h.equipmentMap[id]
	if !ok {
		return nil, false
	}
	return &h.equipment[index], true
}
