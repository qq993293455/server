// Code generated by exporter. DO NOT EDIT.
package rule_model

import (
	"errors"

	"coin-server/common/values"
)

// struct
type TalentAttr struct {
	Id                        values.Integer     `mapstructure:"id" json:"id"`
	BaseId                    values.Integer     `mapstructure:"base_id" json:"base_id"`
	TalentAttrName            string             `mapstructure:"talent_attr_name" json:"talent_attr_name"`
	TalentAttrType            string             `mapstructure:"talent_attr_type" json:"talent_attr_type"`
	TalentAttrDescribe        string             `mapstructure:"talent_attr_describe" json:"talent_attr_describe"`
	DescParams                [][]values.Integer `mapstructure:"desc_params" json:"desc_params"`
	ConsumeTalentNum          values.Integer     `mapstructure:"consume_talent_num" json:"consume_talent_num"`
	TalentAttrFixed           [][]values.Integer `mapstructure:"talent_attr_fixed" json:"talent_attr_fixed"`
	TalentAttrFixedPercentage [][]values.Integer `mapstructure:"talent_attr_fixed_percentage" json:"talent_attr_fixed_percentage"`
	TalentAttrViews           string             `mapstructure:"talent_attr_views" json:"talent_attr_views"`
}

// parse func
func ParseTalentAttr(data *Data) {
	if err := data.UnmarshalKey("talent_attr", &h.talentAttr); err != nil {
		panic(errors.New("parse table TalentAttr err:\n" + err.Error()))
	}
	for i, el := range h.talentAttr {
		h.talentAttrMap[el.Id] = i
	}
}

func (i *TalentAttr) Len() int {
	return len(h.talentAttr)
}

func (i *TalentAttr) List() []TalentAttr {
	return h.talentAttr
}

func (i *TalentAttr) GetTalentAttrById(id values.Integer) (*TalentAttr, bool) {
	index, ok := h.talentAttrMap[id]
	if !ok {
		return nil, false
	}
	return &h.talentAttr[index], true
}
